<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Git - 标签 - EEBONDの博客</title>
        <link>https://eebond.github.io/tags/git/</link>
        <description>Git - 标签 - EEBONDの博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>eebond0327@gmail.com (eebond)</managingEditor>
            <webMaster>eebond0327@gmail.com (eebond)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 24 Nov 2021 20:26:32 &#43;0000</lastBuildDate><atom:link href="https://eebond.github.io/tags/git/" rel="self" type="application/rss+xml" /><item>
    <title>Git版本控制教程（高级篇）</title>
    <link>https://eebond.github.io/git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E6%95%99%E7%A8%8B%E9%AB%98%E7%BA%A7%E7%AF%87/</link>
    <pubDate>Wed, 24 Nov 2021 20:26:32 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://eebond.github.io/git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E6%95%99%E7%A8%8B%E9%AB%98%E7%BA%A7%E7%AF%87/</guid>
    <description><![CDATA[<p><a href="https://backlog.com/git-tutorial/cn/" target="_blank" rel="noopener noreffer">参考文章：猴子都能懂得GIT入门</a></p>
<h2 id="一操作分支">一、操作分支</h2>
<h3 id="0-事前预备">0. 事前预备</h3>
<p>首先建立一个新目录，并在里面建立一个空数据库。这里我们创建一个名为tutorial的目录。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ mkdir tutorial
</span></span><span class="line"><span class="cl">$ <span class="nb">cd</span> tutorial
</span></span><span class="line"><span class="cl">$ git init
</span></span><span class="line"><span class="cl">Initialized empty Git repository in /Users/eguchi/Desktop/tutorial/.git/
</span></span></code></pre></td></tr></table>
</div>
</div><p>在tutorial目录创建一个名为myfile.txt的档案，然后提交。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git add myfile.txt
</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;first commit&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>master <span class="o">(</span>root-commit<span class="o">)</span> a73ae49<span class="o">]</span> first commit
</span></span><span class="line"><span class="cl"> <span class="m">1</span> files changed, <span class="m">1</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">0</span> deletions<span class="o">(</span>-<span class="o">)</span>
</span></span><span class="line"><span class="cl"> create mode <span class="m">100644</span> myfile.txt
</span></span></code></pre></td></tr></table>
</div>
</div><p>目前的历史记录是这样的。<br>

<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125211136.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125211136.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h3 id="1-建立分支">1. 建立分支</h3>
<p>创建名为issue1的分支。</p>
<p>您可以通过branch命令来创建分支。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git branch &lt;branchname&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>创建名为issue1的分支。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git branch issue1
</span></span></code></pre></td></tr></table>
</div>
</div><p>不指定参数直接执行branch命令的话，可以显示分支列表。 前面有*的就是现在的分支。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git branch
</span></span><span class="line"><span class="cl">  issue1
</span></span><span class="line"><span class="cl">* master
</span></span></code></pre></td></tr></table>
</div>
</div><p>目前的历史记录是这样的。<br>

<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125211444.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125211444.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h3 id="2-切换分支">2. 切换分支</h3>
<p>若要在新建的issue1分支进行提交，需要切换到issue1分支。</p>
<p>要执行checkout命令以退出分支。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git checkout &lt;branch&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>切换到issue1分支。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git checkout issue1
</span></span><span class="line"><span class="cl">Switched to branch <span class="s1">&#39;issue1&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>目前的历史记录是这样的。<br>

<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125211820.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125211820.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>在checkout命令指定 -b选项执行，可以创建分支并进行切换。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git checkout -b &lt;branch&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>在切换到issue1分支的状态下提交，历史记录会被记录到issue1分支。在myfile.txt添加add命令的说明后再提交。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span><span class="line"><span class="cl">add 把变更录入到索引中
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ git add myfile.txt
</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;添加add的说明&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>issue1 b2b23c4<span class="o">]</span> 添加add的说明
</span></span><span class="line"><span class="cl"> <span class="m">1</span> files changed, <span class="m">1</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">0</span> deletions<span class="o">(</span>-<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>目前的历史记录是这样的。<br>

<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125212104.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125212104.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h3 id="3-合并分支">3. 合并分支</h3>
<p>向master分支合并issue1分支的修改。<br>

<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125212104.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125212104.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>执行merge命令以合并分支</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git merge &lt;commit&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>该命令将指定分支导入到HEAD指定的分支。先切换master分支，然后把issue1分支导入到master分支。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git checkout master
</span></span><span class="line"><span class="cl">Switched to branch <span class="s1">&#39;master&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>打开myfile.txt档案以确认内容。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span></code></pre></td></tr></table>
</div>
</div><p>已经在issue1分支进行了编辑上一页的档案，所以master分支的myfile.txt的内容没有更改。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git merge issue1
</span></span><span class="line"><span class="cl">Updating 1257027..b2b23c4
</span></span><span class="line"><span class="cl">Fast-forward
</span></span><span class="line"><span class="cl"> myfile.txt <span class="p">|</span>    <span class="m">1</span> +
</span></span><span class="line"><span class="cl"> <span class="m">1</span> files changed, <span class="m">1</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">0</span> deletions<span class="o">(</span>-<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>master分支指向的提交移动到和issue1同样的位置。这个是fast-forward（快进）合并。</p>
<p>
<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125214034.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125214034.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>打开myfile.txt档案，确认内容。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span><span class="line"><span class="cl">add 把变更录入到索引中
</span></span></code></pre></td></tr></table>
</div>
</div><p>已添加「add 把变更录入到索引中」。</p>
<h3 id="4-删除分支">4. 删除分支</h3>
<p>既然issue1分支的内容已经顺利地合并到master分支了，现在可以将其删除了。</p>
<p>在branch命令指定-d选项执行，以删除分支。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git branch -d &lt;branchname&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行以下的命令以删除issue1分支。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git branch -d issue1
</span></span><span class="line"><span class="cl">Deleted branch issue1 <span class="o">(</span>was b2b23c4<span class="o">)</span>.
</span></span></code></pre></td></tr></table>
</div>
</div><p>issue1分支被删除了。您可以用branch命令来确认分支是否已被删除。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git branch
</span></span><span class="line"><span class="cl">* master
</span></span></code></pre></td></tr></table>
</div>
</div><p>
<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125214652.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125214652.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h3 id="5-并行操作">5. 并行操作</h3>
<p>接下来，创建2个分支来尝试并行操作吧。</p>
<p>首先创建issue2分支和issue3分支，并切换到issue2分支。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git branch issue2
</span></span><span class="line"><span class="cl">$ git branch issue3
</span></span><span class="line"><span class="cl">$ git checkout issue2
</span></span><span class="line"><span class="cl">Switched to branch <span class="s1">&#39;issue2&#39;</span>
</span></span><span class="line"><span class="cl">$ git branch
</span></span><span class="line"><span class="cl">* issue2
</span></span><span class="line"><span class="cl">  issue3
</span></span><span class="line"><span class="cl">  master
</span></span></code></pre></td></tr></table>
</div>
</div><p>
<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125214850.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125214850.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure><br>
在issue2分支的myfile.txt添加commit命令的说明后提交。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span><span class="line"><span class="cl">add 把变更录入到索引中
</span></span><span class="line"><span class="cl">commit 记录索引的状态
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git add myfile.txt
</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;添加commit的说明&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>issue2 8f7aa27<span class="o">]</span> 添加commit的说明
</span></span><span class="line"><span class="cl"> <span class="m">1</span> files changed, <span class="m">2</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">0</span> deletions<span class="o">(</span>-<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>
<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125215801.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211125215801.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>接着，切换到issue3分支。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git checkout issue3
</span></span><span class="line"><span class="cl">Switched to branch <span class="s1">&#39;issue3&#39;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>打开myfile.txt档案。由于在issue2分支添加了commit命令的说明，所以issue3分支的myfile.txt里只有add命令的说明。</p>
<p>添加pull命令的说明后提交。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span><span class="line"><span class="cl">add 把变更录入到索引中
</span></span><span class="line"><span class="cl">pull 取得远端数据库的内容
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git add myfile.txt
</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;添加pull的说明&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>issue3 e5f91ac<span class="o">]</span> 添加pull的说明
</span></span><span class="line"><span class="cl"> <span class="m">1</span> files changed, <span class="m">2</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">0</span> deletions<span class="o">(</span>-<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>
<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211126124912.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211126124912.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure><br>
这样，添加commit的说明的操作，和添加pull的说明的操作就并行进行了。</p>
<h3 id="6-解决合并的冲突">6. 解决合并的冲突</h3>
<p>把issue2分支和issue3分支的修改合并到master。</p>
<p>切换master分支后，与issue2分支合并。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git checkout master
</span></span><span class="line"><span class="cl">Switched to branch <span class="s1">&#39;master&#39;</span>
</span></span><span class="line"><span class="cl">$ git merge issue2
</span></span><span class="line"><span class="cl">Updating b2b23c4..8f7aa27
</span></span><span class="line"><span class="cl">Fast-forward
</span></span><span class="line"><span class="cl"> myfile.txt <span class="p">|</span>    <span class="m">2</span> ++
</span></span><span class="line"><span class="cl"> <span class="m">1</span> files changed, <span class="m">2</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">0</span> deletions<span class="o">(</span>-<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行fast-forward（快进）合并。<br>

<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211126125942.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211126125942.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>接着合并issue3分支。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git merge issue3
</span></span><span class="line"><span class="cl">Auto-merging myfile.txt
</span></span><span class="line"><span class="cl">CONFLICT <span class="o">(</span>content<span class="o">)</span>: Merge conflict in myfile.txt
</span></span><span class="line"><span class="cl">Automatic merge failed<span class="p">;</span> fix conflicts and <span class="k">then</span> commit the result.
</span></span></code></pre></td></tr></table>
</div>
</div><p>自动合并失败。由于在同一行进行了修改，所以产生了冲突。这时myfile.txt的内容如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span><span class="line"><span class="cl">add 把变更录入到索引中
</span></span><span class="line"><span class="cl">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
</span></span><span class="line"><span class="cl">commit 记录索引的状态
</span></span><span class="line"><span class="cl">=======
</span></span><span class="line"><span class="cl">pull 取得远端数据库的内容
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt;&gt;&gt;&gt; issue3
</span></span></code></pre></td></tr></table>
</div>
</div><p>在发生冲突的地方，Git生成了内容的差异。请做以下修改：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span><span class="line"><span class="cl">add 把变更录入到索引中
</span></span><span class="line"><span class="cl">commit 记录索引的状态
</span></span><span class="line"><span class="cl">pull 取得远端数据库的内容
</span></span></code></pre></td></tr></table>
</div>
</div><p>修改冲突的部分，重新提交。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git add myfile.txt
</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;合并issue3分支&#34;</span>
</span></span><span class="line"><span class="cl"><span class="c1"># On branch master</span>
</span></span><span class="line"><span class="cl">nothing to commit <span class="o">(</span>working directory clean<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>历史记录如下图所示。因为在这次合并中修改了冲突部分，所以会重新创建合并修改的提交记录。这样，master的HEAD就移动到这里了。这种合并不是fast-forward合并，而是non fast-forward合并。<br>

<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211126130834.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211126130834.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h3 id="7-用rebase合并">7. 用rebase合并</h3>
<p>合并issue3分支的时候，使用rebase可以使提交的历史记录显得更简洁。</p>
<p>现在暂时取消刚才的合并。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git reset --hard HEAD~
</span></span></code></pre></td></tr></table>
</div>
</div><p>
<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211126145149.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211126145149.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>切换到issue3分支后，对master执行rebase。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git checkout issue3
</span></span><span class="line"><span class="cl">Switched to branch <span class="s1">&#39;issue3&#39;</span>
</span></span><span class="line"><span class="cl">$ git rebase master
</span></span><span class="line"><span class="cl">First, rewinding head to replay your work on top of it...
</span></span><span class="line"><span class="cl">Applying: 添加pull的说明
</span></span><span class="line"><span class="cl">Using index info to reconstruct a base tree...
</span></span><span class="line"><span class="cl">&lt;stdin&gt;:13: new blank line at EOF.
</span></span><span class="line"><span class="cl">+
</span></span><span class="line"><span class="cl">warning: <span class="m">1</span> line adds whitespace errors.
</span></span><span class="line"><span class="cl">Falling back to patching base and 3-way merge...
</span></span><span class="line"><span class="cl">Auto-merging myfile.txt
</span></span><span class="line"><span class="cl">CONFLICT <span class="o">(</span>content<span class="o">)</span>: Merge conflict in myfile.txt
</span></span><span class="line"><span class="cl">Failed to merge in the changes.
</span></span><span class="line"><span class="cl">Patch failed at <span class="m">0001</span> 添加pull的说明
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">When you have resolved this problem run <span class="s2">&#34;git rebase --continue&#34;</span>.
</span></span><span class="line"><span class="cl">If you would prefer to skip this patch, instead run <span class="s2">&#34;git rebase --skip&#34;</span>.
</span></span><span class="line"><span class="cl">To check out the original branch and stop rebasing run <span class="s2">&#34;git rebase --abort&#34;</span>.
</span></span></code></pre></td></tr></table>
</div>
</div><p>和merge时的操作相同，修改在myfile.txt发生冲突的部分。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span><span class="line"><span class="cl">add 把变更录入到索引中
</span></span><span class="line"><span class="cl">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
</span></span><span class="line"><span class="cl">commit 记录索引的状态
</span></span><span class="line"><span class="cl">=======
</span></span><span class="line"><span class="cl">pull 取得远端数据库的内容
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt;&gt;&gt;&gt; issue3
</span></span></code></pre></td></tr></table>
</div>
</div><p>rebase的时候，修改冲突后的提交不是使用commit命令，而是执行rebase命令指定 &ndash;continue选项。若要取消rebase，指定 &ndash;abort选项。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git add myfile.txt
</span></span><span class="line"><span class="cl">$ git rebase --continue
</span></span><span class="line"><span class="cl">Applying: 添加pull的说明
</span></span></code></pre></td></tr></table>
</div>
</div><p>
<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211126150215.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211126150215.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>这样，在master分支的issue3分支就可以fast-forward合并了。切换到master分支后执行合并。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git checkout master
</span></span><span class="line"><span class="cl">Switched to branch <span class="s1">&#39;master&#39;</span>
</span></span><span class="line"><span class="cl">$ git merge issue3
</span></span><span class="line"><span class="cl">Updating 8f7aa27..96a0ff0
</span></span><span class="line"><span class="cl">Fast-forward
</span></span><span class="line"><span class="cl"> myfile.txt <span class="p">|</span>    <span class="m">1</span> +
</span></span><span class="line"><span class="cl"> <span class="m">1</span> files changed, <span class="m">1</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">0</span> deletions<span class="o">(</span>-<span class="o">)</span>  
</span></span></code></pre></td></tr></table>
</div>
</div><p>myfile.txt的最终内容和merge是一样的，但是历史记录如下。<br>

<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211126150327.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211126150327.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h2 id="二操作标签">二、操作标签</h2>
<h3 id="1-添加轻标签">1. 添加轻标签</h3>
<p>使用tag命令来添加标签，在&lt; tagname &gt;执行标签的名称</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git tag &lt;tagname&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>在HEAD指向的提交里添加名为apple的标签，请执行以下的命令。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git tag apple
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果没有使用参数而执行tag，可以显示标签列表。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git tag
</span></span><span class="line"><span class="cl">apple
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果在log命令添加 &ndash;decorate选项执行，可以显示包含标签资料的历史记录。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git log --decorate
</span></span><span class="line"><span class="cl">commit e7978c94d2104e3e0e6e4a5b4a8467b1d2a2ba19 <span class="o">(</span>HEAD, tag: apple, master<span class="o">)</span>
</span></span><span class="line"><span class="cl">Author: yourname &lt;yourname@yourmail.com&gt;
</span></span><span class="line"><span class="cl">Date:   Wed Jul <span class="m">18</span> 16:43:27 <span class="m">2012</span> +0900
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    first commit
</span></span></code></pre></td></tr></table>
</div>
</div><p>
<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211128160811.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211128160811.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h3 id="2-添加注解标签">2. 添加注解标签</h3>
<p>若要添加注解标签，可以在tag命令指定 -a选项执行。执行后会启动编辑区，请输入注解，也可以指定-m选项来添加注解。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git tag -a &lt;tagname&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>在HEAD指向的提交里添加名为banana的标签，请执行以下的命令。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git tag -am <span class="s2">&#34;连猴子都懂的Git&#34;</span> banana  
</span></span></code></pre></td></tr></table>
</div>
</div><p>如果在tag命令指定-n选项执行，可以显示标签的列表和注解。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git tag -n
</span></span><span class="line"><span class="cl">apple           first commit
</span></span><span class="line"><span class="cl">banana          连猴子都懂的Git
</span></span></code></pre></td></tr></table>
</div>
</div><p>
<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211128161512.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211128161512.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h3 id="3-删除标签">3. 删除标签</h3>
<p>若要删除标签，在tag命令指定 -d选项执行。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git tag -d &lt;tagname&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>
<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211128164422.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211128164422.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h2 id="三改写提交">三、改写提交！</h2>
<p>为了节省时间，这个教程使用现有的历史记录作为本地数据库。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget https://backlog.com/git-tutorial/cn/download/stepup-tutorial.zip
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="1-commit---amend">1. commit &ndash;amend</h3>
<p>我们将修改最近一次的提交。</p>
<p>首先进入stepup-tutorial/tutorial1目录。本地端的历史记录状态如下图显示。<br>

<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211129195201.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211129195201.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>用log命令确认历史记录。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git log
</span></span><span class="line"><span class="cl">commit 326fc9f70d022afdd31b0072dbbae003783d77ed
</span></span><span class="line"><span class="cl">Author: yourname &lt;yourname@yourmail.com&gt;
</span></span><span class="line"><span class="cl">Date:   Mon Jul <span class="m">16</span> 23:17:56 <span class="m">2012</span> +0900
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    添加add的说明
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">commit 48eec1ddf73a7fb508ef664efd6b3d873631742f
</span></span><span class="line"><span class="cl">Author: yourname &lt;yourname@yourmail.com&gt;
</span></span><span class="line"><span class="cl">Date:   Mon Jul <span class="m">16</span> 23:16:14 <span class="m">2012</span> +0900
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    first commit
</span></span></code></pre></td></tr></table>
</div>
</div><p>首先打开sample.txt档案，并添加commit的注释。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span><span class="line"><span class="cl">add 把变更录入到索引中
</span></span><span class="line"><span class="cl">commit 记录索引的状态
</span></span></code></pre></td></tr></table>
</div>
</div><p>添加 &ndash;amend 选项，然后提交。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">git add sample.txt
</span></span><span class="line"><span class="cl">git commit --amend
</span></span></code></pre></td></tr></table>
</div>
</div><p>编辑工具会显示最近一次提交的提交消息，把消息修改为「<strong>添加add和commit的讲解</strong>」并进行保存。</p>
<p>现在已经修改了提交的内容，然后用log命令确认历史记录和提交消息。<br>

<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211129195423.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211129195423.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git log
</span></span><span class="line"><span class="cl">commit e9d75a02e62814541ee0410d9c1d1bf47ab1c057
</span></span><span class="line"><span class="cl">Author: yourname &lt;yourname@yourmail.com&gt;
</span></span><span class="line"><span class="cl">Date:   Mon Jul <span class="m">16</span> 23:17:56 <span class="m">2012</span> +0900
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    添加add和commit的讲解
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">commit 48eec1ddf73a7fb508ef664efd6b3d873631742f
</span></span><span class="line"><span class="cl">Author: yourname &lt;yourname@yourmail.com&gt;
</span></span><span class="line"><span class="cl">Date:   Mon Jul <span class="m">16</span> 23:16:14 <span class="m">2012</span> +0900
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    first commit
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="2-revert">2. revert</h3>
<p>我们将用revert命令来取消「添加pull的讲解」提交。</p>
<p>首先进入stepup-tutorial/tutorial2目录。本地端的历史记录的状态如下图显示。<br>

<figure><a class="lightgallery" href="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211129195640.png" title=" " data-thumbnail="https://fastly.jsdelivr.net/gh/eebond/images/Markdown/20211129195640.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h3 id="3-reset">3. reset</h3>
<h3 id="4-cherry-pick">4. cherry-pick</h3>
<h3 id="5-用rebase--i-汇总提交">5. 用rebase -i 汇总提交</h3>
<h3 id="6-用rebase--i-修改提交">6. 用rebase -i 修改提交</h3>
<h3 id="7-merge---squash">7. merge &ndash;squash</h3>
]]></description>
</item><item>
    <title>Git版本控制教程（入门篇）</title>
    <link>https://eebond.github.io/git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E6%95%99%E7%A8%8B%E5%85%A5%E9%97%A8%E7%AF%87/</link>
    <pubDate>Tue, 23 Nov 2021 17:20:45 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://eebond.github.io/git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E6%95%99%E7%A8%8B%E5%85%A5%E9%97%A8%E7%AF%87/</guid>
    <description><![CDATA[<p><a href="https://backlog.com/git-tutorial/cn/" target="_blank" rel="noopener noreffer">本文参考：猴子都能懂的GIT</a></p>
<h2 id="一git基础操作">一、Git基础操作</h2>
<h3 id="1-安装git">1. 安装Git</h3>
<p>本文按照命令行方式来安装和使用git，如需windows的GUI可以使用<a href="http://code.google.com/p/tortoisegit/" target="_blank" rel="noopener noreffer">tortoisegit</a>。</p>
<ol>
<li>windows安装方式：<a href="http://git-scm.com/" target="_blank" rel="noopener noreffer">http://git-scm.com/</a></li>
<li>liunx安装: <code>yum install -y git</code></li>
</ol>
<h3 id="2-初期设定">2. 初期设定</h3>
<p>安装Git之后，请输入您的用户名和电子邮件地址。该设置操作在安装Git后进行一次就够了。这些信息将作为提交者信息显示在更新历史中。</p>
<blockquote>
<p>Git的设定被存放在用户本地目录的.gitconfig档案里。虽然可以直接编辑配置文件，但在这个教程里我们使用config命令。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git config --global user.name <span class="s2">&#34;&lt;用户名&gt;&#34;</span>
</span></span><span class="line"><span class="cl">git config --global user.email <span class="s2">&#34;&lt;电子邮件&gt;&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>以下命令能让Git以彩色显示:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git config --global color.ui auto
</span></span></code></pre></td></tr></table>
</div>
</div><p>可以为Git命令设定别名。例如：把「checkout」缩略为「co」，然后就使用「co」来执行命令。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git config --global alias.co checkout
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>Windows问题解决</strong></p>
<ol>
<li>报错<code>LF will be replaced by CRLF in xxxx. The file will have its original line endings in your working directory.</code><br>
原理：<br>
CRLF – Carriage-Return Line-Feed 回车换行 <br>
就是回车(CR, ASCII 13, \r) 换行(LF, ASCII 10, \n)。<br>
这两个ACSII字符不会在屏幕有任何输出，但在Windows中广泛使用来标识一行的结束。<br>
而在Linux/UNIX系统中只有换行符。
也就是说在windows中的换行符为 CRLF， 而在linux下的换行符为：LF<br>
使用git来生成一个rails工程后，文件中的换行符为LF， 当执行git add .时，系统提示：LF 将被转换成 CRLF</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git config core.autocrlf <span class="nb">false</span>  //禁用自动转换    
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="2">
<li>如果如果在Windows使用命令行 (Git Bash), 含非ASCII字符的文件名会显示为 &ldquo;\346\226\260\350\246&hellip;&quot;。若设定如下，就可以让含非ASCII字符的文件名正确显示了。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git config --global core.quotepath off
</span></span></code></pre></td></tr></table>
</div>
</div><ol start="3">
<li>若在Windows使用命令行，您只能输入ASCII字符。所以，如果您的提交信息包含非ASCII字符，请不要使用-m选项，而要用外部编辑器输入。
外部编辑器必须能与字符编码UTF-8和换行码LF兼容。</li>
</ol>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git config --global core.editor <span class="s2">&#34;\&#34;[使用编辑区的路径]\&#34;&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="3-新建本地数据库">3. 新建本地数据库</h3>
<p>接下来要在本地新建数据库，创建一个名称为「tutorial」的空目录，并把它放在Git管理之下。</p>
<p>下面将以这个目录进行教程讲解。</p>
<p>首先在任意一个地方创建tutorial目录。然后使用init命令把该tutorial目录移动到本地Git数据库。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git init
</span></span></code></pre></td></tr></table>
</div>
</div><p>按照以下步骤把新创建的tutorial目录设置到Git数据库。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ mkdir tutorial
</span></span><span class="line"><span class="cl">$ <span class="nb">cd</span> tutorial
</span></span><span class="line"><span class="cl">$ git init
</span></span><span class="line"><span class="cl">Initialized empty Git repository in /Users/yourname/Desktop/tutorial/.git/
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="4-提交文件">4. 提交文件</h3>
<p>在tutorial目录新建一个文件，然后将文件添加到数据库。</p>
<p>首先在tutorial目录里新建一个名为「sample.txt」的文本文件，请在文件中输入以下的内容：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span></code></pre></td></tr></table>
</div>
</div><p>请使用status命令确认工作树和索引的状态。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git status
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行status命令以确认tutorial目录的状态。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git status
</span></span><span class="line"><span class="cl"><span class="c1"># On branch master</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Initial commit</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Untracked files:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   (use &#34;git add &lt;file&gt;...&#34; to include in what will be committed)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     sample.txt</span>
</span></span><span class="line"><span class="cl">nothing added to commit but untracked files present <span class="o">(</span>use <span class="s2">&#34;git add&#34;</span> to track<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>从status响应我们可以看到‘sample.txt’目前不是历史记录对象。请首先把‘sample.txt’加入到索引，就可以追踪它的变更了。</p>
<p>将文件加入到索引，要使用add命令。在<file>指定加入索引的文件。用空格分割可以指定多个文件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git add &lt;file&gt;..
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>tips
指定参数「.」，可以把所有的文件加入到索引。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git add .
</span></span></code></pre></td></tr></table>
</div>
</div></blockquote>
<p>现在，我们把sample.txt加入到索引然后确认一下。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git add sample.txt
</span></span><span class="line"><span class="cl">$ git status
</span></span><span class="line"><span class="cl"><span class="c1"># On branch master</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Initial commit</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Changes to be committed:</span>
</span></span><span class="line"><span class="cl"><span class="c1">#   (use &#34;git rm --cached &lt;file&gt;...&#34; to unstage)</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span><span class="line"><span class="cl"><span class="c1">#     new file:   sample.txt</span>
</span></span><span class="line"><span class="cl"><span class="c1">#</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>既然sample.txt已加入到索引，我们就可以提交文件了。请执行如下显示的commit命令。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;&#34;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行commit命令之后确认状态。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;first commit&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>master <span class="o">(</span>root-commit<span class="o">)</span> 116a286<span class="o">]</span> first commit
</span></span><span class="line"><span class="cl"> <span class="m">0</span> files changed, <span class="m">0</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">0</span> deletions<span class="o">(</span>-<span class="o">)</span>
</span></span><span class="line"><span class="cl"> create mode <span class="m">100644</span> sample.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">$ git status
</span></span><span class="line"><span class="cl"><span class="c1"># On branch master</span>
</span></span><span class="line"><span class="cl">nothing to commit <span class="o">(</span>working directory clean<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>从status响应我们可以看到没有新的变更要提交。</p>
<p>使用log命令，我们可以在数据库的提交记录看到新的提交。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git log
</span></span><span class="line"><span class="cl">commit ac56e474afbbe1eab9ebce5b3ab48ac4c73ad60e
</span></span><span class="line"><span class="cl">Author: eguchi &lt;eguchi@nulab.co.jp&gt;
</span></span><span class="line"><span class="cl">Date:   Thu Jul <span class="m">12</span> 18:00:21 <span class="m">2012</span> +0900
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    first commit
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="二共享数据库远程仓库">二、共享数据库(远程仓库)</h2>
<h3 id="1-创建共享数据库远程仓库">1. 创建共享数据库（远程仓库）</h3>
<p>在GitHub或服务器中创建git数据库，比较简单此处不做演示</p>
<h3 id="2-push到远程数据库">2. push到远程数据库</h3>
<p>向远程数据库推送本地数据库的修改记录吧。</p>
<h4 id="给远程数据库取别名">给远程数据库取别名</h4>
<p>您可以给远程数据库取一个别名。这样，下次推送的时候就不需要输入长串的远程数据库地址了。在这个教程里，我们的远程数据库命名为“origin”。</p>
<p>请使用remote指令添加远程数据库。在<name>处输入远程数据库名称，在<url>处指定远程数据库的URL。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git remote add &lt;name&gt; &lt;url&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>通过运行以下指令，将创建于上一个页面的远程数据库的URL命名为“origin”。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git remote add origin https://<span class="o">[</span>your_space_id<span class="o">]</span>.backlogtool.com/git/<span class="o">[</span>your_project_key<span class="o">]</span>/tutorial.git
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>执行推送或者拉取的时候，如果省略了远程数据库的名称，则默认使用名为”origin“的远程数据库。因此一般都会把远程数据库命名为origin。</p>
</blockquote>
<h4 id="push操作">push操作</h4>
<blockquote>
<p>GitHub仓库在push前，需要在GitHub中对本地数据库所在主机进行授权</p>
</blockquote>
<p>使用push命令向数据库推送更改内容。&lt; repository &gt;处输入<strong>目标数据库地址</strong>或者<strong>远程数据库别名</strong>，&lt; refspec &gt;处指定<strong>推送的分支</strong>。我们将在高级篇详细地对分支进行说明。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git push &lt;repository&gt; &lt;refspec&gt;...
</span></span></code></pre></td></tr></table>
</div>
</div><p>运行以下命令便可向远程数据库‘origin’进行推送。当执行命令时，如果您指定了-u选项，那么下一次推送时就可以省略分支名称了。但是，首次运行指令向空的远程数据库推送时，必须指定远程数据库名称和分支名称。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ git push -u origin master
</span></span><span class="line"><span class="cl">Username: &lt;用户名&gt;
</span></span><span class="line"><span class="cl">Password: &lt;密码&gt;
</span></span><span class="line"><span class="cl">Counting objects: 3, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">Writing objects: 100% <span class="o">(</span>3/3<span class="o">)</span>, <span class="m">245</span> bytes, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">Total <span class="m">3</span> <span class="o">(</span>delta 0<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>
</span></span><span class="line"><span class="cl">To https://nulab.backlog.jp/git/BLG/tutorial.git
</span></span><span class="line"><span class="cl"> * <span class="o">[</span>new branch<span class="o">]</span>      master -&gt; master
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="3-克隆远程数据库">3. 克隆远程数据库</h3>
<p>快试试克隆远程数据库吧，这样您在别的地方也可以工作了。</p>
<p>使用clone指令可以复制数据库，在&lt; repository &gt;指定远程数据库的URL，
在&lt; directory &gt;指定新目录的名称。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git clone &lt;repository&gt; &lt;directory&gt;
</span></span></code></pre></td></tr></table>
</div>
</div><p>执行以下指令后，会在目录(tutorial2) 复制远程数据库。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git clone https://nulab.backlog.jp/git/BLG/tutorial.git tutorial2
</span></span><span class="line"><span class="cl">Cloning into <span class="s1">&#39;tutorial2&#39;</span>...
</span></span><span class="line"><span class="cl">Username: &lt;用户名&gt;
</span></span><span class="line"><span class="cl">Password: &lt;密码&gt;
</span></span><span class="line"><span class="cl">remote: Counting objects: 3, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">remote: Total <span class="m">3</span> <span class="o">(</span>delta 0<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>
</span></span><span class="line"><span class="cl">Unpacking objects: 100% <span class="o">(</span>3/3<span class="o">)</span>, <span class="k">done</span>.
</span></span></code></pre></td></tr></table>
</div>
</div><p>若要验证克隆是否成功，请看在复制的目录“tutorial2”中的sample.txt是否含有以下文字。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="4-从克隆的数据库进行push">4. 从克隆的数据库进行push</h3>
<p>首先，在之前克隆的数据库目录里的sample.txt 添加以下黑体字，并提交。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span><span class="line"><span class="cl">add 把变更录入到索引中
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git add sample.txt
</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;添加add的说明&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>master 1ef5c8c<span class="o">]</span> 添加add的说明
</span></span><span class="line"><span class="cl"> <span class="m">1</span> files changed, <span class="m">1</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">1</span> deletions<span class="o">(</span>-<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>用tutorial2进行的操作</strong></p>
<p>然后，推送此次变更，更新远程数据库。<br>
当在克隆的数据库目录执行推送时，您可以省略数据库和分支名称。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git push
</span></span><span class="line"><span class="cl">Username: &lt;用户名&gt;
</span></span><span class="line"><span class="cl">Password: &lt;密码&gt;
</span></span><span class="line"><span class="cl">Counting objects: 5, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">Delta compression using up to <span class="m">4</span> threads.
</span></span><span class="line"><span class="cl">Compressing objects: 100% <span class="o">(</span>2/2<span class="o">)</span>, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">Writing objects: 100% <span class="o">(</span>3/3<span class="o">)</span>, <span class="m">351</span> bytes, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">Total <span class="m">3</span> <span class="o">(</span>delta 0<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>
</span></span><span class="line"><span class="cl">To https://nulab.backlog.jp/git/BLG/tutorial.git
</span></span><span class="line"><span class="cl">   486789c..1ef5c8c  master -&gt; master
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="5-从远程数据库pull">5. 从远程数据库pull</h3>
<p>试试从远程数据库把最新变更内容拉取到tutorial吧。</p>
<p>我们把在上一页面中从“tutorial2”推送到远程数据库的内容拉取到数据库目录“tutorial”吧。</p>
<p>使用pull指令进行拉取操作。省略数据库名称的话，会在名为origin的数据库进行pull。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git pull &lt;repository&gt; &lt;refspec&gt;...
</span></span></code></pre></td></tr></table>
</div>
</div><p>用tutorial进行的操作</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git pull origin master
</span></span><span class="line"><span class="cl">Username: &lt;用户名&gt;
</span></span><span class="line"><span class="cl">Password: &lt;密码&gt;
</span></span><span class="line"><span class="cl">From https://nulab.backlog.jp/git/BLG/tutorial
</span></span><span class="line"><span class="cl"> * branch            master     -&gt; FETCH_HEAD
</span></span><span class="line"><span class="cl">Updating ac56e47..3da09c1
</span></span><span class="line"><span class="cl">Fast-forward
</span></span><span class="line"><span class="cl"> sample.txt <span class="p">|</span>    <span class="m">1</span> +
</span></span><span class="line"><span class="cl"> <span class="m">1</span> files changed, <span class="m">1</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">0</span> deletions<span class="o">(</span>-<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>sample.txt文档的内容已更新。</p>
<h2 id="二-整合修改记录">二、 整合修改记录</h2>
<h3 id="1-push冲突的状态">1. push冲突的状态</h3>
<p>现在，我们将要学习怎样解决冲突。
首先，我们用“tutorial”和“tutorial2”制造一个冲突状态。</p>
<p><strong>用tutorial进行的操作</strong><br>
首先，打开tutorial目录的sample.txt文档，添加以下黑体字之后进行提交。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span><span class="line"><span class="cl">add 把变更录入到索引中
</span></span><span class="line"><span class="cl">commit 记录索引的状态
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git add sample.txt
</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;添加commit的说明&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>master 95f15c9<span class="o">]</span> 添加commit的说明
</span></span><span class="line"><span class="cl"> <span class="m">1</span> files changed, <span class="m">1</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">0</span> deletions<span class="o">(</span>-<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>用tutorial2进行的操作</strong><br>
接下来，打开tutorial2目录的sample.txt文档，添加以下黑体字之后进行提交。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span><span class="line"><span class="cl">add 把变更录入到索引中
</span></span><span class="line"><span class="cl">pull 取得远端数据库的内容
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git add sample.txt
</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;添加pull的说明&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>master 4c01823<span class="o">]</span> 添加pull的说明
</span></span><span class="line"><span class="cl"> <span class="m">1</span> files changed, <span class="m">1</span> insertions<span class="o">(</span>+<span class="o">)</span>, <span class="m">0</span> deletions<span class="o">(</span>-<span class="o">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>用tutorial2进行的操作</strong><br>
现在从tutorial2 推送内容到远程数据库。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git push
</span></span><span class="line"><span class="cl">Username: &lt;用户名&gt;
</span></span><span class="line"><span class="cl">Password: &lt;密码&gt;
</span></span><span class="line"><span class="cl">Counting objects: 5, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">Delta compression using up to <span class="m">4</span> threads.
</span></span><span class="line"><span class="cl">Compressing objects: 100% <span class="o">(</span>2/2<span class="o">)</span>, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">Writing objects: 100% <span class="o">(</span>3/3<span class="o">)</span>, <span class="m">391</span> bytes, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">Total <span class="m">3</span> <span class="o">(</span>delta 0<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>
</span></span><span class="line"><span class="cl">To https://nulab.backlog.jp/git/BLG/tutorial.git
</span></span><span class="line"><span class="cl">   3da09c1..4c01823  master -&gt; master
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>用tutorial进行的操作</strong><br>
现在从tutorial推送内容到远程数据库吧。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git push
</span></span><span class="line"><span class="cl">Username: &lt;用户名&gt;
</span></span><span class="line"><span class="cl">Password: &lt;密码&gt;
</span></span><span class="line"><span class="cl">To https://nulab.backlog.jp/git/BLG/tutorial.git
</span></span><span class="line"><span class="cl"> ! <span class="o">[</span>rejected<span class="o">]</span>        master -&gt; master <span class="o">(</span>non-fast-forward<span class="o">)</span>
</span></span><span class="line"><span class="cl">error: failed to push some refs to <span class="s1">&#39;https://nulab.backlog.jp/git/BLG/tutorial.git&#39;</span>
</span></span><span class="line"><span class="cl">To prevent you from losing history, non-fast-forward updates were rejected
</span></span><span class="line"><span class="cl">Merge the remote changes <span class="o">(</span>e.g. <span class="s1">&#39;git pull&#39;</span><span class="o">)</span> before pushing again.  See the
</span></span><span class="line"><span class="cl"><span class="s1">&#39;Note about fast-forwards&#39;</span> section of <span class="s1">&#39;git push --help&#39;</span> <span class="k">for</span> details.
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="2-解决冲突">2. 解决冲突</h3>
<p>为了把变更内容推送到远程数据库，我们必须手动解决冲突。首先请运行pull，以从远程数据库取得最新的变更记录吧。</p>
<p><strong>用tutorial进行的操作</strong><br>
请执行以下指令。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git pull origin master
</span></span><span class="line"><span class="cl">Username: &lt;用户名&gt;
</span></span><span class="line"><span class="cl">Password: &lt;密码&gt;
</span></span><span class="line"><span class="cl">remote: Counting objects: 5, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">remote: Compressing objects: 100% <span class="o">(</span>2/2<span class="o">)</span>, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">remote: Total <span class="m">3</span> <span class="o">(</span>delta 0<span class="o">)</span>, reused <span class="m">0</span> <span class="o">(</span>delta 0<span class="o">)</span>
</span></span><span class="line"><span class="cl">Unpacking objects: 100% <span class="o">(</span>3/3<span class="o">)</span>, <span class="k">done</span>.
</span></span><span class="line"><span class="cl">From https://nulab.backlog.jp/git/BLG/tutorial
</span></span><span class="line"><span class="cl"> * branch            master     -&gt; FETCH_HEAD
</span></span><span class="line"><span class="cl">Auto-merging sample.txt
</span></span><span class="line"><span class="cl">CONFLICT <span class="o">(</span>content<span class="o">)</span>: Merge conflict in sample.txt
</span></span><span class="line"><span class="cl">Automatic merge failed<span class="p">;</span> fix conflicts and <span class="k">then</span> commit the result.
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>用tutorial进行的操作</strong><br>
讯息显示「Merge conflict in sample.txt」。请打开sample.txt文件，我们看到Git已添加标示以显示冲突部分。请为Git无法完成主动合并的部分做以下的修改。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span><span class="line"><span class="cl">add 把变更录入到索引中
</span></span><span class="line"><span class="cl">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
</span></span><span class="line"><span class="cl">commit 记录索引的状态
</span></span><span class="line"><span class="cl">=======
</span></span><span class="line"><span class="cl">pull 取得远端数据库的内容
</span></span><span class="line"><span class="cl">&gt;&gt;&gt;&gt;&gt;&gt;&gt; 4c0182374230cd6eaa93b30049ef2386264fe12a
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>用tutorial进行的操作</strong><br>
导入两方的修改，并删除多余的标示行以解决冲突。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">连猴子都懂的Git命令
</span></span><span class="line"><span class="cl">add 把变更录入到索引中
</span></span><span class="line"><span class="cl">commit 记录索引的状态
</span></span><span class="line"><span class="cl">pull 取得远端数据库的内容
</span></span></code></pre></td></tr></table>
</div>
</div><p><strong>用tutorial进行的操作</strong><br>
文件的内容发生了修改，所以需要进行提交。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git add sample.txt
</span></span><span class="line"><span class="cl">$ git commit -m <span class="s2">&#34;合并&#34;</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>master d845b81<span class="o">]</span> 合并
</span></span></code></pre></td></tr></table>
</div>
</div><p>这样就完成了从远程数据库导入最新的修改内容。</p>
<p><strong>用tutorial进行的操作</strong><br>
我们可以用log命令来确认数据库的历史记录是否准确。指定&ndash;graph选项，能以文本形式显示更新记录的流程图。指定&ndash;oneline选项，能在一行中显示提交的信息。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">$ git log --graph --oneline
</span></span><span class="line"><span class="cl">*   d845b81 合并
</span></span><span class="line"><span class="cl"><span class="p">|</span><span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span><span class="p">|</span> * 4c01823 添加pull的说明
</span></span><span class="line"><span class="cl">* <span class="p">|</span> 95f15c9 添加commit的说明
</span></span><span class="line"><span class="cl"><span class="p">|</span>/
</span></span><span class="line"><span class="cl">* 3da09c1 添加add的说明
</span></span><span class="line"><span class="cl">* ac56e47 first commit
</span></span></code></pre></td></tr></table>
</div>
</div><p>这表明两个修改记录已经整合了。</p>
<p>这时候，之前被拒绝的push应该可以通过了，push一下看看吧。</p>
<blockquote>
<p>辛苦了！Git的基本使用方法的说明到这里就告一段落了。有关分支以及修改等更高阶的内容，请参见高级篇！</p>
</blockquote>
]]></description>
</item></channel>
</rss>

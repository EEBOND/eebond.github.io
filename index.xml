<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>EEBONDの博客</title>
        <link>https://eebond.github.io/</link>
        <description>程序员的自我修炼手册</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>eebond0327@gmail.com (eebond)</managingEditor>
            <webMaster>eebond0327@gmail.com (eebond)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 15 May 2022 19:02:31 &#43;0800</lastBuildDate>
            <atom:link href="https://eebond.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Linux实现免密登录以及密钥生成方法</title>
    <link>https://eebond.github.io/linux%E5%AE%9E%E7%8E%B0%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E4%BB%A5%E5%8F%8A%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/</link>
    <pubDate>Sun, 15 May 2022 19:02:31 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://eebond.github.io/linux%E5%AE%9E%E7%8E%B0%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95%E4%BB%A5%E5%8F%8A%E5%AF%86%E9%92%A5%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>本文主要讲述实现从一台Linux服务器实现对另一台Linux服务器的
免密登录，还有在linux上生成ssh key密钥的方法。</p>
<hr>
<h2 id="生成ssh-key密钥文件">生成SSH KEY密钥文件</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ssh-keygen -t rsa
</span></span></code></pre></td></tr></table>
</div>
</div><p>用户家目录中的.ssh目录下出现如下文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">authorized_keys  #认证用户的公钥，认证用户可以免密登录当前账户
</span></span><span class="line"><span class="cl">id_rsa           #当前用户的密钥
</span></span><span class="line"><span class="cl">id_rsa.pub       #当前用户的公钥  
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="设置免密登录">设置免密登录</h2>
<p>其实免密登录的原理就是把当前用户的公钥放到被登录用户的authorized_keys文件中去。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ssh-copy-id root@144.34.163.167 -p <span class="m">29488</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>期间需要输入被登录用户的密码才能将当前用户的公钥放入被登录用户的authorized_keys文件中去。<br>
还有个办法就是复制当前用户的公钥直接粘贴到被登录用户的authorized_keys文件中去。</p>
<p>如果被登录的Linux的端口不是默认的22端口，则要用 -p 选项来指定登录端口。</p>
<h2 id="尝试免密登录">尝试免密登录</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ssh root@144.34.163.167 -p <span class="m">29488</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>成功免密登录！</p>
]]></description>
</item><item>
    <title>Linux中安装配置JDK8</title>
    <link>https://eebond.github.io/linux%E4%B8%AD%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEjdk8/</link>
    <pubDate>Sun, 17 Apr 2022 20:01:48 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://eebond.github.io/linux%E4%B8%AD%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEjdk8/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<blockquote>
<p>学习JAVA需要安装配置jdk环境，太多数时候会在Linux环境中配置jdk，本篇以Centos7为例配置jdk8，以便日后参考，快速配置环境。</p>
</blockquote>
<hr>
<h2 id="安装配置">安装配置</h2>
<h3 id="下载jdk8">下载jdk8</h3>
<p>1.通过<a href="https://www.oracle.com/java/technologies/downloads/#java8" target="_blank" rel="noopener noreffer">oracle官网下载</a></p>
<p>
<figure><a class="lightgallery" href="/images/Markdown/20220417201328.png" title=" " data-thumbnail="/images/Markdown/20220417201328.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>但是官网下载，需要Oracle账号。网上找到得账号：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">1287019365@qq.com
</span></span><span class="line"><span class="cl">Oracle@1234
</span></span></code></pre></td></tr></table>
</div>
</div><p>2.通过wget下载我的私有云盘里的jdk8备份</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget jdk-8u321-linux-x64.tar.gz https://cloud.eebond.xyz/api/v3/file/get/194/jdk-8u321-linux-x64.tar.gz?sign<span class="o">=</span>bvDVYkfqvYU4jv86no9qpC6Sw7n2opQLA6CtcU_W-EI%3D%3A0
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="配置">配置</h3>
<p>1、 解压jdk-8u321-linux-x64.tar.gz到指定目录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir /usr/java <span class="o">&amp;&amp;</span> tar -zxvf jdk-8u321-linux-x64.tar.gz -C /usr/java/
</span></span></code></pre></td></tr></table>
</div>
</div><p>2、 配置环境变量</p>
<p>打开配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">vim /etc/profile
</span></span></code></pre></td></tr></table>
</div>
</div><p>编写配置文件内容</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">export JAVA_HOME=/usr/java/jdk1.8.0_321
</span></span><span class="line"><span class="cl">export PATH=$JAVA_HOME/bin:$PATH
</span></span><span class="line"><span class="cl">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
</span></span></code></pre></td></tr></table>
</div>
</div><p>使更新后的配置文件生效</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="nb">source</span> /etc/profile
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="验证使用jdk">验证使用jdk</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">java -version 
</span></span><span class="line"><span class="cl">javac
</span></span></code></pre></td></tr></table>
</div>
</div><p>
<figure><a class="lightgallery" href="/images/Markdown/20220417203744.png" title=" " data-thumbnail="/images/Markdown/20220417203744.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
]]></description>
</item><item>
    <title>CentOS7安装部署Trojan-go</title>
    <link>https://eebond.github.io/centos7%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2trojan-go/</link>
    <pubDate>Thu, 07 Apr 2022 18:05:43 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://eebond.github.io/centos7%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2trojan-go/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<blockquote>
<p>Trojan-goTrojan-Go是使用Go语言实现的完整的Trojan代理，和Trojan协议以及原版的配置文件格式兼容。支持并且兼容Trojan-GFW版本的绝大多数功能，并扩展了更多的实用功能。</p>
</blockquote>
<blockquote>
<p>Trojan-Go的的首要目标是保障传输安全性和隐蔽性。在此前提下，尽可能提升传输性能和易用性。</p>
</blockquote>
<blockquote>
<p>Trojan-Go<a href="https://p4gefau1t.github.io/trojan-go/" target="_blank" rel="noopener noreffer">官方文档</a>,可以详细阅读，了解trojan的原理。</p>
</blockquote>
<blockquote>
<p>Trojan-Go和V2ray + WS + TLS一样是目前比较稳定的科学上网方式，shadowsocks已经能被墙识别，搬瓦工秒被封端口。</p>
</blockquote>
<h2 id="安装trojan-go">安装Trojan-Go</h2>
<h3 id="申请tls证书">申请TLS证书</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">certbot certonly --standalone -d trojan.eebond.xyz
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>如果当前有nginx正在运行，先关闭nginx。</p>
</blockquote>
<p>查看证书是否安装成功</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">certbot certificates
</span></span></code></pre></td></tr></table>
</div>
</div><p>证书安装路径</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">Certificate Path: /etc/letsencrypt/live/trojan.eebond.xyz/fullchain.pem
</span></span><span class="line"><span class="cl">Private Key Path: /etc/letsencrypt/live/trojan.eebond.xyz/privkey.pem
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="安装配置nginx">安装配置Nginx</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yum install nginx -y
</span></span></code></pre></td></tr></table>
</div>
</div><p>网站配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">vim /etc/nginx/conf.d/trojan.conf
</span></span></code></pre></td></tr></table>
</div>
</div><p>文件内容</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">server {
</span></span><span class="line"><span class="cl">        listen       1239;
</span></span><span class="line"><span class="cl">        root         /srv/www/blog;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    server {
</span></span><span class="line"><span class="cl">        listen       1001;
</span></span><span class="line"><span class="cl">        root         /srv/www/blog;
</span></span><span class="line"><span class="cl">    }
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="安装配置trojan-go">安装配置trojan-go</h3>
<h4 id="下载安装trojan-go">下载安装trojan-go</h4>
<blockquote>
<p>在 <a href="https://github.com/p4gefau1t/trojan-go/releases" target="_blank" rel="noopener noreffer">https://github.com/p4gefau1t/trojan-go/releases</a> 查看下载链接，下载解压至 /usr/local/trojan-go目录</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget https://github.com/p4gefau1t/trojan-go/releases/download/v0.10.6/trojan-go-linux-amd64.zip  
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="配置trojan-go">配置trojan-go</h4>
<p>将example目录下的 server.json 复制到/usr/local/trojan-go目录，修改为如下内容</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">{
</span></span><span class="line"><span class="cl">    &#34;run_type&#34;: &#34;server&#34;,
</span></span><span class="line"><span class="cl">    &#34;local_addr&#34;: &#34;0.0.0.0&#34;,
</span></span><span class="line"><span class="cl">    &#34;local_port&#34;: 447,
</span></span><span class="line"><span class="cl">    &#34;remote_addr&#34;: &#34;127.0.0.1&#34;,
</span></span><span class="line"><span class="cl">    &#34;remote_port&#34;: 1001,
</span></span><span class="line"><span class="cl">    &#34;password&#34;: [
</span></span><span class="line"><span class="cl">        &#34;5f45307f-a867-05de-3913-ff539f92325f&#34;
</span></span><span class="line"><span class="cl">    ],
</span></span><span class="line"><span class="cl">    &#34;ssl&#34;: {
</span></span><span class="line"><span class="cl">        &#34;verify&#34;: true,
</span></span><span class="line"><span class="cl">        &#34;verify_hostname&#34;: true,
</span></span><span class="line"><span class="cl">        &#34;cert&#34;: &#34;/etc/letsencrypt/live/trojan.eebond.xyz/fullchain.pem&#34;,
</span></span><span class="line"><span class="cl">        &#34;key&#34;: &#34;/etc/letsencrypt/live/trojan.eebond.xyz/privkey.pem&#34;,
</span></span><span class="line"><span class="cl">        &#34;sni&#34;: &#34;trojan.eebond.xyz&#34;,
</span></span><span class="line"><span class="cl">	&#34;fallback_addr&#34;: &#34;127.0.0.1&#34;,
</span></span><span class="line"><span class="cl">	&#34;fallback_port&#34;: 1239
</span></span><span class="line"><span class="cl">    },
</span></span><span class="line"><span class="cl">    &#34;router&#34;: {
</span></span><span class="line"><span class="cl">        &#34;enabled&#34;: true,
</span></span><span class="line"><span class="cl">        &#34;block&#34;: [
</span></span><span class="line"><span class="cl">            &#34;geoip:private&#34;
</span></span><span class="line"><span class="cl">        ],
</span></span><span class="line"><span class="cl">        &#34;geoip&#34;: &#34;/usr/local/trojan-go/geoip.dat&#34;,
</span></span><span class="line"><span class="cl">        &#34;geosite&#34;: &#34;/usr/local/trojan-go/geosite.dat&#34;
</span></span><span class="line"><span class="cl">    }
</span></span><span class="line"><span class="cl">}
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="创建systemctl启动文件">创建systemctl启动文件</h4>
<p>1.复制启动文件至系统服务目录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">cp /usr/local/trojan-go/example/trojan-go.service /usr/lib/systemd/system/
</span></span></code></pre></td></tr></table>
</div>
</div><p>2.修改启动文件，</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">[Unit]
</span></span><span class="line"><span class="cl">Description=Trojan-Go - An unidentifiable mechanism that helps you bypass GFW
</span></span><span class="line"><span class="cl">Documentation=https://p4gefau1t.github.io/trojan-go/
</span></span><span class="line"><span class="cl">After=network.target nss-lookup.target
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Service]
</span></span><span class="line"><span class="cl">User=root
</span></span><span class="line"><span class="cl">CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
</span></span><span class="line"><span class="cl">AmbientCapabilities=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
</span></span><span class="line"><span class="cl">NoNewPrivileges=true
</span></span><span class="line"><span class="cl">ExecStart=/usr/local/trojan-go/trojan-go -config /usr/local/trojan-go/server.json
</span></span><span class="line"><span class="cl">Restart=on-failure
</span></span><span class="line"><span class="cl">RestartSec=10s
</span></span><span class="line"><span class="cl">LimitNOFILE=infinity
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">[Install]
</span></span><span class="line"><span class="cl">WantedBy=multi-user.target
</span></span></code></pre></td></tr></table>
</div>
</div><blockquote>
<p>注意修改User和ExecStart，否则无法自启动</p>
</blockquote>
<p>3.启动服务&amp;设置开机启动</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">systemctl daemon-reload
</span></span><span class="line"><span class="cl">systemctl start trojan-go
</span></span><span class="line"><span class="cl">systemctl <span class="nb">enable</span> trojan-go
</span></span></code></pre></td></tr></table>
</div>
</div><p>之后就可以在客户端快乐的使用了！</p>
]]></description>
</item><item>
    <title>CentOS7 安装部署Shadowsocks</title>
    <link>https://eebond.github.io/centos7-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2shadowsocks/</link>
    <pubDate>Thu, 07 Apr 2022 09:05:53 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://eebond.github.io/centos7-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2shadowsocks/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<blockquote>
<p>之前安装的shadowsocks-libev有点不太好用了，端口直接被封，可能是加密协议的问题。
现在，用网上通用的脚本方法安装shadowsocks。</p>
</blockquote>
<h2 id="安装">安装</h2>
<p><a href="https://github.com/teddysun/shadowsocks_install" target="_blank" rel="noopener noreffer">秋水逸冰的一键安装脚本</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget –no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh <span class="o">&amp;&amp;</span> bash ./shadowsocks.sh  
</span></span></code></pre></td></tr></table>
</div>
</div><p>直接默认配置就行，后期手动更改配置。</p>
<h2 id="修改配置文件">修改配置文件</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">vim /etc/shadowsocks.json
</span></span></code></pre></td></tr></table>
</div>
</div><p>只需要修改服务端口和密码就行了，其他的不懂就不要动。</p>
<p>退出编辑页面，重启shadowsocks</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">systemctl restart shadowsocks
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="客户端下载使用">客户端下载使用</h2>
<p><a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="noopener noreffer">shadowsocks-windows客户端直链</a></p>
]]></description>
</item><item>
    <title>Cloudreve网盘备份与迁移</title>
    <link>https://eebond.github.io/cloudreve%E7%BD%91%E7%9B%98%E5%A4%87%E4%BB%BD%E4%B8%8E%E8%BF%81%E7%A7%BB/</link>
    <pubDate>Fri, 01 Apr 2022 15:37:56 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://eebond.github.io/cloudreve%E7%BD%91%E7%9B%98%E5%A4%87%E4%BB%BD%E4%B8%8E%E8%BF%81%E7%A7%BB/</guid>
    <description><![CDATA[<h2 id="备份">备份</h2>
<p>Cloudreve网盘使用内置数据库，实际所有的数据都保存在uploads目录里，而我的uploads使用软链接指向我的阿里云盘中的uploads目录，所以我实际只需要备份如下文件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">  cloudreve
</span></span><span class="line"><span class="cl">  cloudreve.db
</span></span><span class="line"><span class="cl">  conf.ini
</span></span></code></pre></td></tr></table>
</div>
</div><p>实际只需要在Cloudreve目录创建git仓库，将上述文件推送到GitHub仓库即可，具体操作不详细叙述。</p>
<h2 id="迁移">迁移</h2>
<p>之前已经备份过了，所以当要在新服务器上重新搭建cloudreve，只需要pull上述仓库分支。</p>
<p>我的具体操作如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">git pull git@github.com:eebond/banwagong.git master
</span></span></code></pre></td></tr></table>
</div>
</div><p>之后按照官方教程安装配置<a href="https://docs.cloudreve.org/getting-started/install" target="_blank" rel="noopener noreffer">https://docs.cloudreve.org/getting-started/install</a></p>
]]></description>
</item><item>
    <title>vscode&#43;PicGo插件配置实现自动上传图片</title>
    <link>https://eebond.github.io/vscode-picgo%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/</link>
    <pubDate>Thu, 31 Mar 2022 20:13:31 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://eebond.github.io/vscode-picgo%E6%8F%92%E4%BB%B6%E9%85%8D%E7%BD%AE%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87/</guid>
    <description><![CDATA[<h2 id="前言">前言</h2>
<p>由于我喜欢在VSCode上写博客，也一直使用PicGo客户端来上传图片到图床，但是由于经常在Ubuntu与windows系统中切换，而PicGo对于Liunx的支持不太好（无法实现开机自启动功能），所以想着使用PicGo的vscode插件，那么以后只需要一个VSCode，就可以不需要PicGo客户端了。而且VSCode还可以在不同设备间进行同步。</p>
<h2 id="实现">实现</h2>
<h3 id="安装picgo插件">安装PicGo插件</h3>
<p>
<figure><a class="lightgallery" href="/images/Markdown/20220331202347.png" title=" " data-thumbnail="/images/Markdown/20220331202347.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h3 id="配置picgo插件">配置PicGo插件</h3>
<p>
<figure><a class="lightgallery" href="/images/Markdown/20220331202539.png" title=" " data-thumbnail="/images/Markdown/20220331202539.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>
<figure><a class="lightgallery" href="/images/Markdown/20220331203130.png" title=" " data-thumbnail="/images/Markdown/20220331203130.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>
<figure><a class="lightgallery" href="/images/Markdown/20220331205910.png" title=" " data-thumbnail="/images/Markdown/20220331205910.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h3 id="使用的快捷键">使用的快捷键</h3>
<p>
<figure><a class="lightgallery" href="/images/Markdown/20220331203252.png" title=" " data-thumbnail="/images/Markdown/20220331203252.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>至此，就可以在VSCode中快乐的使用图床了。</p>
<blockquote>
<p>tips:
不过VSCode的插件PicGo来上传图片确实稍微比客户端慢一点。</p>
</blockquote>
]]></description>
</item><item>
    <title>Ubuntu中安装PicGo并配置GitHub图床</title>
    <link>https://eebond.github.io/ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85picgo%E5%B9%B6%E9%85%8D%E7%BD%AEgithub%E5%9B%BE%E5%BA%8A/</link>
    <pubDate>Thu, 31 Mar 2022 13:53:13 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://eebond.github.io/ubuntu%E4%B8%AD%E5%AE%89%E8%A3%85picgo%E5%B9%B6%E9%85%8D%E7%BD%AEgithub%E5%9B%BE%E5%BA%8A/</guid>
    <description><![CDATA[<p>PicGo在windows中安装较为简单，本文详细说明PicGo在Ubuntu中的安装配置过程，Windows端可以参考。</p>
<h3 id="下载picgo软件包">下载PicGo软件包</h3>
<p>项目地址：<a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener noreffer">PicGo</a></p>
<p>Ubuntu端需要下载后缀为.AppImage的软件包。</p>
<p>本文所下软件包为<a href="https://github.com/Molunerfinn/PicGo/releases/download/v2.3.0/PicGo-2.3.0.AppImage" target="_blank" rel="noopener noreffer">PicGo-2.3.0.AppImage</a></p>
<h3 id="安装运行软件包">安装运行软件包</h3>
<p>给PicGo-2.3.0.AppImage权限：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">chmod <span class="m">777</span> PicGo-2.3.0.AppImage
</span></span></code></pre></td></tr></table>
</div>
</div><p>右键单击，选择run，运行PicGo。</p>
<h3 id="配置picgo和github图床">配置PicGo和GitHub图床</h3>
<p>事先准备在GitHub新建一个仓库，用来存放图片，并且添加Token。</p>
<p>
<figure><a class="lightgallery" href="/images/Markdown/20220331205442.png" title=" " data-thumbnail="/images/Markdown/20220331205442.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>其中自定义域名为</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">https://raw.githubusercontent.com/eebond/images/main
</span></span></code></pre></td></tr></table>
</div>
</div><p>还可以对图片链接进行CDN加速，需要改变自定义域名为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">https://cdn.jsdelivr.net/gh/用户名/图床仓库名
</span></span></code></pre></td></tr></table>
</div>
</div><p>
<figure><a class="lightgallery" href="/images/Markdown/20220331185426.png" title=" " data-thumbnail="/images/Markdown/20220331185426.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<p>指定存储路径是在仓库中创建的一个文件夹。</p>
<p>快捷键设置：

<figure><a class="lightgallery" href="/images/Markdown/20220331141114.png" title=" " data-thumbnail="/images/Markdown/20220331141114.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h3 id="安装必要支撑软件">安装必要支撑软件</h3>
<p>之前的操作后，PicGo无法正常使用快捷键，缺失支撑软件。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">sudo apt install xclip
</span></span></code></pre></td></tr></table>
</div>
</div><p>至此，我们可以正常使用图床了。</p>
]]></description>
</item><item>
    <title>Hexo博客GitHub Actions自动部署</title>
    <link>https://eebond.github.io/hexo%E5%8D%9A%E5%AE%A2github-actions%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</link>
    <pubDate>Wed, 30 Mar 2022 19:14:28 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://eebond.github.io/hexo%E5%8D%9A%E5%AE%A2github-actions%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</guid>
    <description><![CDATA[<h2 id="问题分析">问题分析</h2>
<p>本地Hexo博客源码备份到GitHub的一个仓库中，博客展示有两个地方，一个是GitHub Pages，一个是自己VPS建的博客网站。每次先将本地源码备份推送到GitHub仓库，然后再deploy出网站内容发布到两个服务端。通过GitHub的Actions，可以让我只需要每次推送源码，GitHub帮我自动部署网站。<strong>甚至本地都不需要安装Hexo</strong>。</p>
<h2 id="实现方案">实现方案</h2>
<p>blog_backup仓库用于存放Hexo博客源码，eebond.github.io仓库存放博客网站文件，vps自建git私服存放博客网站文件。</p>
<p>需要一对公私钥，私钥放在blog_backup仓库，公钥放在eebond.github.io仓库和vps私服仓库所在用户。</p>
<h3 id="生成公钥私钥">生成公钥私钥</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ssh-keygen -f hexo-deploy-key -t rsa
</span></span></code></pre></td></tr></table>
</div>
</div><p>命令执行后会生成两个文件hexo-deploy-key（私钥）和hexo-deploy-key.pub（公钥）。</p>
<h3 id="添加公钥">添加公钥</h3>
<h4 id="添加公钥到github-pages仓库中eebondgithubio">添加公钥到GitHub Pages仓库中（eebond.github.io)</h4>
<p>
<figure><a class="lightgallery" href="/images/Markdown/20220331135108.png" title=" " data-thumbnail="/images/Markdown/20220331135108.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h4 id="添加公钥到私服仓库所在用户">添加公钥到私服仓库所在用户</h4>
<p>我的私服是在git用户中创建的，所以添加到git用户下的.ssh/authorized_keys文件中。</p>
<h3 id="添加私钥">添加私钥</h3>
<p>将私钥添加到blog_backup仓库的Actions secrets：

<figure><a class="lightgallery" href="/images/Markdown/20220331142405.png" title=" " data-thumbnail="/images/Markdown/20220331142405.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h3 id="配置workflow文件">配置workflow文件</h3>
<p>在blog_backup仓库根目录下创建.github/workflows/autodeploy.yml文件，文件名随意设置。
文件内容：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 当有改动推送到main分支时，启动Action</span>
</span></span><span class="line"><span class="cl">name: 自动部署
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">on:
</span></span><span class="line"><span class="cl">  push:
</span></span><span class="line"><span class="cl">    branches:
</span></span><span class="line"><span class="cl">      - master <span class="c1">#2020年10月后github新建仓库默认分支改为main，注意更改</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  release:
</span></span><span class="line"><span class="cl">    types:
</span></span><span class="line"><span class="cl">      - published
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">jobs:
</span></span><span class="line"><span class="cl">  deploy:
</span></span><span class="line"><span class="cl">    runs-on: ubuntu-latest
</span></span><span class="line"><span class="cl">    steps:
</span></span><span class="line"><span class="cl">      - name: 检查分支
</span></span><span class="line"><span class="cl">        uses: actions/checkout@v2
</span></span><span class="line"><span class="cl">        with:
</span></span><span class="line"><span class="cl">          ref: master <span class="c1">#2020年10月后github新建仓库默认分支改为main，注意更改</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      - name: 安装 Node
</span></span><span class="line"><span class="cl">        uses: actions/setup-node@v1
</span></span><span class="line"><span class="cl">        with:
</span></span><span class="line"><span class="cl">          node-version: <span class="s1">&#39;12.x&#39;</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      - name: 安装 Hexo
</span></span><span class="line"><span class="cl">        run: <span class="p">|</span>
</span></span><span class="line"><span class="cl">          <span class="nb">export</span> <span class="nv">TZ</span><span class="o">=</span><span class="s1">&#39;Asia/Shanghai&#39;</span>
</span></span><span class="line"><span class="cl">          npm install hexo-cli -g
</span></span><span class="line"><span class="cl">      - name: 缓存 Hexo
</span></span><span class="line"><span class="cl">        uses: actions/cache@v1
</span></span><span class="line"><span class="cl">        id: cache
</span></span><span class="line"><span class="cl">        with:
</span></span><span class="line"><span class="cl">          path: node_modules
</span></span><span class="line"><span class="cl">          key: <span class="si">${</span><span class="p">{runner.OS</span><span class="si">}</span><span class="o">}</span>-<span class="si">${</span><span class="p">{hashFiles(</span><span class="s1">&#39;**/package-lock.json&#39;</span><span class="p">)</span><span class="si">}</span><span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">      - name: 安装依赖
</span></span><span class="line"><span class="cl">        <span class="k">if</span>: steps.cache.outputs.cache-hit !<span class="o">=</span> <span class="s1">&#39;true&#39;</span>
</span></span><span class="line"><span class="cl">        run: <span class="p">|</span>
</span></span><span class="line"><span class="cl">          npm install --save
</span></span><span class="line"><span class="cl">      - name: 生成静态文件
</span></span><span class="line"><span class="cl">        run: <span class="p">|</span>
</span></span><span class="line"><span class="cl">          hexo clean
</span></span><span class="line"><span class="cl">          hexo generate
</span></span><span class="line"><span class="cl">      - name: 服务器验证
</span></span><span class="line"><span class="cl">        env:
</span></span><span class="line"><span class="cl">          ACTION_DEPLOY_KEY: <span class="si">${</span><span class="p">{ secrets.HEXO_DEPLOY_KEY </span><span class="si">}</span><span class="o">}</span>
</span></span><span class="line"><span class="cl">        run: <span class="p">|</span>
</span></span><span class="line"><span class="cl">          sudo timedatectl set-timezone <span class="s2">&#34;Asia/Shanghai&#34;</span>
</span></span><span class="line"><span class="cl">          mkdir -p ~/.ssh/
</span></span><span class="line"><span class="cl">          <span class="nb">echo</span> <span class="s2">&#34;</span><span class="nv">$ACTION_DEPLOY_KEY</span><span class="s2">&#34;</span> &gt; ~/.ssh/id_rsa
</span></span><span class="line"><span class="cl">          chmod <span class="m">600</span> ~/.ssh/id_rsa
</span></span><span class="line"><span class="cl">          ssh-keyscan -p <span class="m">29488</span> 23.105.219.155 &gt;&gt; ~/.ssh/known_hosts  <span class="c1">#此处填写你的服务器IP</span>
</span></span><span class="line"><span class="cl">          git config --global user.name <span class="s2">&#34;eebond&#34;</span>
</span></span><span class="line"><span class="cl">          git config --global user.email <span class="s2">&#34;1422797591@qq.com&#34;</span> <span class="c1">#修改为你的GitHub用户名邮箱</span>
</span></span><span class="line"><span class="cl">      - name: 部署
</span></span><span class="line"><span class="cl">        run: <span class="p">|</span>
</span></span><span class="line"><span class="cl">          hexo deploy
</span></span></code></pre></td></tr></table>
</div>
</div><p>之后就可以本地推送后，GitHub自动部署网站了。</p>
]]></description>
</item><item>
    <title>vps上挂载阿里云盘并用aria2实现离线下载</title>
    <link>https://eebond.github.io/vps%E4%B8%8A%E6%8C%82%E8%BD%BD%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E5%B9%B6%E7%94%A8aria2%E5%AE%9E%E7%8E%B0%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD/</link>
    <pubDate>Wed, 30 Mar 2022 16:06:46 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://eebond.github.io/vps%E4%B8%8A%E6%8C%82%E8%BD%BD%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98%E5%B9%B6%E7%94%A8aria2%E5%AE%9E%E7%8E%B0%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD/</guid>
    <description><![CDATA[<h2 id="vps挂载阿里云盘并用aria2实现离线下载">vps挂载阿里云盘并用aria2实现离线下载</h2>
<p>之前用cloudreve搭建了一个私人网盘，性能可以，但是vps的空间太小，无法存储很多文件。该网盘还有离线下载功能，需要用aria2来实现。所以我想把私人网盘的存储放在阿里云盘里，并且通过aria2实现两个网盘的离线下载。</p>
<h3 id="首先获得阿里云盘-refreshtoken">首先获得阿里云盘 refreshToken</h3>
<p>登录阿里云网页版，点击F12</p>
<p>
<figure><a class="lightgallery" href="/images/Markdown/20220330162759.png" title=" " data-thumbnail="/images/Markdown/20220330162759.png" data-sub-html="<h2> </h2><p> </p>">
        
    </a><figcaption class="image-caption"> </figcaption>
    </figure></p>
<h3 id="让阿里云盘实现webdav功能">让阿里云盘实现WebDAV功能</h3>
<p>使用开源项目<a href="https://github.com/messense/aliyundrive-WebDAV" target="_blank" rel="noopener noreffer">aliyundrive-WebDAV</a>来实现功能。</p>
<p>以CentOS7为例：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yum install python3-pip -y
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">pip3 install aliyundrive-WebDAV
</span></span></code></pre></td></tr></table>
</div>
</div><p>升级项目：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">pip install --upgrade aliyundrive-WebDAV
</span></span></code></pre></td></tr></table>
</div>
</div><p>后台启动命令实现WebDAV功能</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nohup aliyundrive-webdav -I -U 用户名 -W 密码 -r 你的token <span class="p">&amp;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="挂载使用阿里云盘">挂载使用阿里云盘</h3>
<p>Rclone 是一个用于在多平台进行文件同步的命令行工具，支持多家网盘及文件传输协议。这里主要介绍 Linux 端挂载 WebDAV 的使用方式：</p>
<p>使用官方脚本安装最新 rclone：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">curl https://rclone.org/install.sh <span class="p">|</span> sudo bash
</span></span></code></pre></td></tr></table>
</div>
</div><p>接下来使用 rclone 挂载 WebDAV，输入后回车，一步一步跟着 rclone 的提示来即可，下方#号后面的内容为步骤翻译注释，不要全部复制粘贴进去了，仔细看提示根据自己的实际情况来修改，输入命令 rclone config 开始配置：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span><span class="lnt">165
</span><span class="lnt">166
</span><span class="lnt">167
</span><span class="lnt">168
</span><span class="lnt">169
</span><span class="lnt">170
</span><span class="lnt">171
</span><span class="lnt">172
</span><span class="lnt">173
</span><span class="lnt">174
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>root@eebond ~<span class="o">]</span><span class="c1"># rclone config</span>
</span></span><span class="line"><span class="cl">2022/03/30 16:46:46 NOTICE: Config file <span class="s2">&#34;/root/.config/rclone/rclone.conf&#34;</span> not found - using defaults
</span></span><span class="line"><span class="cl">No remotes found, make a new one?
</span></span><span class="line"><span class="cl">n<span class="o">)</span> New remote
</span></span><span class="line"><span class="cl">s<span class="o">)</span> Set configuration password
</span></span><span class="line"><span class="cl">q<span class="o">)</span> Quit config
</span></span><span class="line"><span class="cl">n/s/q&gt; n
</span></span><span class="line"><span class="cl">name&gt; aliyun
</span></span><span class="line"><span class="cl">Option Storage.
</span></span><span class="line"><span class="cl">Type of storage to configure.
</span></span><span class="line"><span class="cl">Choose a number from below, or <span class="nb">type</span> in your own value.
</span></span><span class="line"><span class="cl"> <span class="m">1</span> / 1Fichier
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>fichier<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="m">2</span> / Akamai NetStorage
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>netstorage<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="m">3</span> / Alias <span class="k">for</span> an existing remote
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span><span class="nb">alias</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="m">4</span> / Amazon Drive
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>amazon cloud drive<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="m">5</span> / Amazon S3 Compliant Storage Providers including AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Lyve Cloud, Minio, RackCorp, SeaweedFS, and Tencent COS
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>s3<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="m">6</span> / Backblaze B2
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>b2<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="m">7</span> / Better checksums <span class="k">for</span> other remotes
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>hasher<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="m">8</span> / Box
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>box<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="m">9</span> / Cache a remote
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>cache<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">10</span> / Citrix Sharefile
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>sharefile<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">11</span> / Compress a remote
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>compress<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">12</span> / Dropbox
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>dropbox<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">13</span> / Encrypt/Decrypt a remote
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>crypt<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">14</span> / Enterprise File Fabric
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>filefabric<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">15</span> / FTP Connection
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>ftp<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">16</span> / Google Cloud Storage <span class="o">(</span>this is not Google Drive<span class="o">)</span>
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>google cloud storage<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">17</span> / Google Drive
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>drive<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">18</span> / Google Photos
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>google photos<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">19</span> / Hadoop distributed file system
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>hdfs<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">20</span> / Hubic
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>hubic<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">21</span> / In memory object storage system.
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>memory<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">22</span> / Jottacloud
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>jottacloud<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">23</span> / Koofr, Digi Storage and other Koofr-compatible storage providers
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>koofr<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">24</span> / Local Disk
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span><span class="nb">local</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">25</span> / Mail.ru Cloud
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>mailru<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">26</span> / Mega
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>mega<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">27</span> / Microsoft Azure Blob Storage
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>azureblob<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">28</span> / Microsoft OneDrive
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>onedrive<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">29</span> / OpenDrive
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>opendrive<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">30</span> / OpenStack Swift <span class="o">(</span>Rackspace Cloud Files, Memset Memstore, OVH<span class="o">)</span>
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>swift<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">31</span> / Pcloud
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>pcloud<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">32</span> / Put.io
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>putio<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">33</span> / QingCloud Object Storage
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>qingstor<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">34</span> / SSH/SFTP Connection
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>sftp<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">35</span> / Sia Decentralized Cloud
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>sia<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">36</span> / Storj Decentralized Cloud Storage
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>storj<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">37</span> / Sugarsync
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>sugarsync<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">38</span> / Transparently chunk/split large files
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>chunker<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">39</span> / Union merges the contents of several upstream fs
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>union<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">40</span> / Uptobox
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>uptobox<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">41</span> / Webdav
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>webdav<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">42</span> / Yandex Disk
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>yandex<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">43</span> / Zoho
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>zoho<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">44</span> / http Connection
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>http<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">45</span> / premiumize.me
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>premiumizeme<span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="m">46</span> / seafile
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>seafile<span class="o">)</span>
</span></span><span class="line"><span class="cl">Storage&gt; <span class="m">41</span>
</span></span><span class="line"><span class="cl">Option url.
</span></span><span class="line"><span class="cl">URL of http host to connect to.
</span></span><span class="line"><span class="cl">E.g. https://example.com.
</span></span><span class="line"><span class="cl">Enter a value.
</span></span><span class="line"><span class="cl">url&gt; http://127.0.0.1:8080
</span></span><span class="line"><span class="cl">Option vendor.
</span></span><span class="line"><span class="cl">Name of the Webdav site/service/software you are using.
</span></span><span class="line"><span class="cl">Choose a number from below, or <span class="nb">type</span> in your own value.
</span></span><span class="line"><span class="cl">Press Enter to leave empty.
</span></span><span class="line"><span class="cl"> <span class="m">1</span> / Nextcloud
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>nextcloud<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="m">2</span> / Owncloud
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>owncloud<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="m">3</span> / Sharepoint Online, authenticated by Microsoft account
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>sharepoint<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="m">4</span> / Sharepoint with NTLM authentication, usually self-hosted or on-premises
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>sharepoint-ntlm<span class="o">)</span>
</span></span><span class="line"><span class="cl"> <span class="m">5</span> / Other site/service or software
</span></span><span class="line"><span class="cl">   <span class="se">\ </span><span class="o">(</span>other<span class="o">)</span>
</span></span><span class="line"><span class="cl">vendor&gt; <span class="m">5</span>
</span></span><span class="line"><span class="cl">Option user.
</span></span><span class="line"><span class="cl">User name.
</span></span><span class="line"><span class="cl">In <span class="k">case</span> NTLM authentication is used, the username should be in the format <span class="s1">&#39;Domain\User&#39;</span>.
</span></span><span class="line"><span class="cl">Enter a value. Press Enter to leave empty.
</span></span><span class="line"><span class="cl">user&gt; eebond
</span></span><span class="line"><span class="cl">Option pass.
</span></span><span class="line"><span class="cl">Password.
</span></span><span class="line"><span class="cl">Choose an alternative below. Press Enter <span class="k">for</span> the default <span class="o">(</span>n<span class="o">)</span>.
</span></span><span class="line"><span class="cl">y<span class="o">)</span> Yes, <span class="nb">type</span> in my own password
</span></span><span class="line"><span class="cl">g<span class="o">)</span> Generate random password
</span></span><span class="line"><span class="cl">n<span class="o">)</span> No, leave this optional password blank <span class="o">(</span>default<span class="o">)</span>
</span></span><span class="line"><span class="cl">y/g/n&gt; y
</span></span><span class="line"><span class="cl">Enter the password:
</span></span><span class="line"><span class="cl">password:
</span></span><span class="line"><span class="cl">Confirm the password:
</span></span><span class="line"><span class="cl">password:
</span></span><span class="line"><span class="cl">Option bearer_token.
</span></span><span class="line"><span class="cl">Bearer token instead of user/pass <span class="o">(</span>e.g. a Macaroon<span class="o">)</span>.
</span></span><span class="line"><span class="cl">Enter a value. Press Enter to leave empty.
</span></span><span class="line"><span class="cl">bearer_token&gt; 
</span></span><span class="line"><span class="cl">Edit advanced config?
</span></span><span class="line"><span class="cl">y<span class="o">)</span> Yes
</span></span><span class="line"><span class="cl">n<span class="o">)</span> No <span class="o">(</span>default<span class="o">)</span>
</span></span><span class="line"><span class="cl">y/n&gt; 
</span></span><span class="line"><span class="cl">--------------------
</span></span><span class="line"><span class="cl"><span class="o">[</span>aliyun<span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="nb">type</span> <span class="o">=</span> webdav
</span></span><span class="line"><span class="cl"><span class="nv">url</span> <span class="o">=</span> http://127.0.0.1:8080
</span></span><span class="line"><span class="cl"><span class="nv">vendor</span> <span class="o">=</span> other
</span></span><span class="line"><span class="cl"><span class="nv">user</span> <span class="o">=</span> eebond
</span></span><span class="line"><span class="cl"><span class="nv">pass</span> <span class="o">=</span> *** ENCRYPTED ***
</span></span><span class="line"><span class="cl">--------------------
</span></span><span class="line"><span class="cl">y<span class="o">)</span> Yes this is OK <span class="o">(</span>default<span class="o">)</span>
</span></span><span class="line"><span class="cl">e<span class="o">)</span> Edit this remote
</span></span><span class="line"><span class="cl">d<span class="o">)</span> Delete this remote
</span></span><span class="line"><span class="cl">y/e/d&gt; 
</span></span><span class="line"><span class="cl">Current remotes:
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">Name                 <span class="nv">Type</span>
</span></span><span class="line"><span class="cl"><span class="o">====</span>                 <span class="o">====</span>
</span></span><span class="line"><span class="cl">aliyun               webdav
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">e<span class="o">)</span> Edit existing remote
</span></span><span class="line"><span class="cl">n<span class="o">)</span> New remote
</span></span><span class="line"><span class="cl">d<span class="o">)</span> Delete remote
</span></span><span class="line"><span class="cl">r<span class="o">)</span> Rename remote
</span></span><span class="line"><span class="cl">c<span class="o">)</span> Copy remote
</span></span><span class="line"><span class="cl">s<span class="o">)</span> Set configuration password
</span></span><span class="line"><span class="cl">q<span class="o">)</span> Quit config
</span></span><span class="line"><span class="cl">e/n/d/r/c/s/q&gt; q
</span></span></code></pre></td></tr></table>
</div>
</div><p>创建挂载目录</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">mkdir aliyun
</span></span></code></pre></td></tr></table>
</div>
</div><p>安装fuse</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yum install fuse
</span></span></code></pre></td></tr></table>
</div>
</div><p>后台挂载</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">nohup rclone mount aliyun:/ /root/aliyun --cache-dir /tmp --allow-other --vfs-cache-mode writes --allow-non-empty <span class="p">&amp;</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="安装aria2">安装Aria2</h3>
<p>下载脚本</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget -N git.io/aria2.sh <span class="o">&amp;&amp;</span> chmod +x aria2.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>运行脚本安装</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">./aria2.sh
</span></span></code></pre></td></tr></table>
</div>
</div><p>安装成功后修改配置文件</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">vim /root/.aria2c/aria2.conf
</span></span><span class="line"><span class="cl"><span class="c1"># 下载完成后执行的命令</span>
</span></span><span class="line"><span class="cl">on-download-complete<span class="o">=</span>/root/.aria2c/upload.sh
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">vim /root/.aria2c/script.conf
</span></span><span class="line"><span class="cl"><span class="c1"># 网盘名称(RCLONE 配置时填写的 name)</span>
</span></span><span class="line"><span class="cl">drive-name<span class="o">=</span>aliyun
</span></span></code></pre></td></tr></table>
</div>
</div><p>之后在<a href="https://chrome.google.com/webstore/detail/aria2-for-chrome/mpkodccbngfoacfalldjimigbofkhgjn?hl=zh-CN" target="_blank" rel="noopener noreffer">aria2-for-chrome</a>上使用。</p>
<h3 id="私人云盘将文件存储放在阿里云盘中">私人云盘将文件存储放在阿里云盘中</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">ln -s /root/aliyun/uploads/ uploads
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>wget命令使用教程</title>
    <link>https://eebond.github.io/wget%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</link>
    <pubDate>Mon, 28 Mar 2022 16:39:30 &#43;0000</pubDate>
    <author>作者</author>
    <guid>https://eebond.github.io/wget%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</guid>
    <description><![CDATA[<h2 id="wget命令详解">wget命令详解</h2>
<ul>
<li>
<p>导读： wget是Linux中的一个下载文件的工具，wget是在Linux下开发的开放源代码的软件，作者是Hrvoje Niksic，后来被移植到包括Windows在内的各个平台上。</p>
</li>
<li>
<p>它用在命令行下。对于Linux用户是必不可少的工具，尤其对于网络管理员，经常要下载一些软件或从远程服务器恢复备份到本地服务器。如果我们使用虚拟主机，处理这样的事务我们只能先从远程服务器下载到我们电脑磁盘，然后再用ftp工具上传到服务器。这样既浪费时间又浪费精力，那不没办法的事。而到了Linux VPS，它则可以直接下载到服务器而不用经过上传这一步。wget工具体积小但功能完善，它支持断点下载功能，同时支持FTP和HTTP下载方式，支持代理服务器和设置起来方便简单。下面我们以实例的形式说明怎么使用wget。</p>
</li>
</ul>
<h3 id="1安装wget">1.安装wget</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">yum install -y wget
</span></span></code></pre></td></tr></table>
</div>
</div><p>查看帮助手册</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span><span class="lnt">120
</span><span class="lnt">121
</span><span class="lnt">122
</span><span class="lnt">123
</span><span class="lnt">124
</span><span class="lnt">125
</span><span class="lnt">126
</span><span class="lnt">127
</span><span class="lnt">128
</span><span class="lnt">129
</span><span class="lnt">130
</span><span class="lnt">131
</span><span class="lnt">132
</span><span class="lnt">133
</span><span class="lnt">134
</span><span class="lnt">135
</span><span class="lnt">136
</span><span class="lnt">137
</span><span class="lnt">138
</span><span class="lnt">139
</span><span class="lnt">140
</span><span class="lnt">141
</span><span class="lnt">142
</span><span class="lnt">143
</span><span class="lnt">144
</span><span class="lnt">145
</span><span class="lnt">146
</span><span class="lnt">147
</span><span class="lnt">148
</span><span class="lnt">149
</span><span class="lnt">150
</span><span class="lnt">151
</span><span class="lnt">152
</span><span class="lnt">153
</span><span class="lnt">154
</span><span class="lnt">155
</span><span class="lnt">156
</span><span class="lnt">157
</span><span class="lnt">158
</span><span class="lnt">159
</span><span class="lnt">160
</span><span class="lnt">161
</span><span class="lnt">162
</span><span class="lnt">163
</span><span class="lnt">164
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>root@network test<span class="o">]</span><span class="c1"># wget --help</span>
</span></span><span class="line"><span class="cl">GNU Wget 1.14，非交互式的网络文件下载工具。
</span></span><span class="line"><span class="cl">用法： wget <span class="o">[</span>选项<span class="o">]</span>... <span class="o">[</span>URL<span class="o">]</span>...
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">长选项所必须的参数在使用短选项时也是必须的。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 1.启动：</span>
</span></span><span class="line"><span class="cl">  -V,  --version           显示 Wget 的版本信息并退出。
</span></span><span class="line"><span class="cl">  -h,  --help              打印此帮助。
</span></span><span class="line"><span class="cl">  -b,  --background        启动后转入后台。
</span></span><span class="line"><span class="cl">  -e,  --execute<span class="o">=</span>COMMAND   运行一个“.wgetrc”风格的命令。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 2.日志和输入文件：</span>
</span></span><span class="line"><span class="cl">  -o,  --output-file<span class="o">=</span>FILE    将日志信息写入 FILE。
</span></span><span class="line"><span class="cl">  -a,  --append-output<span class="o">=</span>FILE  将信息添加至 FILE。
</span></span><span class="line"><span class="cl">  -d,  --debug               打印大量调试信息。
</span></span><span class="line"><span class="cl">  -q,  --quiet               安静模式 <span class="o">(</span>无信息输出<span class="o">)</span>。
</span></span><span class="line"><span class="cl">  -v,  --verbose             详尽的输出 <span class="o">(</span>此为默认值<span class="o">)</span>。
</span></span><span class="line"><span class="cl">  -nv, --no-verbose          关闭详尽输出，但不进入安静模式。
</span></span><span class="line"><span class="cl">       --report-speed<span class="o">=</span>TYPE   Output bandwidth as TYPE.  TYPE can be bits.
</span></span><span class="line"><span class="cl">  -i,  --input-file<span class="o">=</span>FILE     下载本地或外部 FILE 中的 URLs。
</span></span><span class="line"><span class="cl">  -F,  --force-html          把输入文件当成 HTML 文件。
</span></span><span class="line"><span class="cl">  -B,  --base<span class="o">=</span>URL            解析与 URL 相关的
</span></span><span class="line"><span class="cl">                             HTML 输入文件 <span class="o">(</span>由 -i -F 选项指定<span class="o">)</span>。
</span></span><span class="line"><span class="cl">       --config<span class="o">=</span>FILE         Specify config file to use.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 3.下载：</span>
</span></span><span class="line"><span class="cl">  -t,  --tries<span class="o">=</span>NUMBER            设置重试次数为 NUMBER <span class="o">(</span><span class="m">0</span> 代表无限制<span class="o">)</span>。
</span></span><span class="line"><span class="cl">       --retry-connrefused       即使拒绝连接也是重试。
</span></span><span class="line"><span class="cl">  -O,  --output-document<span class="o">=</span>FILE    将文档写入 FILE。
</span></span><span class="line"><span class="cl">  -nc, --no-clobber              skip downloads that would download to
</span></span><span class="line"><span class="cl">                                 existing files <span class="o">(</span>overwriting them<span class="o">)</span>.
</span></span><span class="line"><span class="cl">  -c,  --continue                断点续传下载文件。
</span></span><span class="line"><span class="cl">       --progress<span class="o">=</span>TYPE           选择进度条类型。
</span></span><span class="line"><span class="cl">  -N,  --timestamping            只获取比本地文件新的文件。
</span></span><span class="line"><span class="cl">  --no-use-server-timestamps     不用服务器上的时间戳来设置本地文件。
</span></span><span class="line"><span class="cl">  -S,  --server-response         打印服务器响应。
</span></span><span class="line"><span class="cl">       --spider                  不下载任何文件。
</span></span><span class="line"><span class="cl">  -T,  --timeout<span class="o">=</span>SECONDS         将所有超时设为 SECONDS 秒。
</span></span><span class="line"><span class="cl">       --dns-timeout<span class="o">=</span>SECS        设置 DNS 查寻超时为 SECS 秒。
</span></span><span class="line"><span class="cl">       --connect-timeout<span class="o">=</span>SECS    设置连接超时为 SECS 秒。
</span></span><span class="line"><span class="cl">       --read-timeout<span class="o">=</span>SECS       设置读取超时为 SECS 秒。
</span></span><span class="line"><span class="cl">  -w,  --wait<span class="o">=</span>SECONDS            等待间隔为 SECONDS 秒。
</span></span><span class="line"><span class="cl">       --waitretry<span class="o">=</span>SECONDS       在获取文件的重试期间等待 1..SECONDS 秒。
</span></span><span class="line"><span class="cl">       --random-wait             获取多个文件时，每次随机等待间隔
</span></span><span class="line"><span class="cl">                                 0.5*WAIT...1.5*WAIT 秒。
</span></span><span class="line"><span class="cl">       --no-proxy                禁止使用代理。
</span></span><span class="line"><span class="cl">  -Q,  --quota<span class="o">=</span>NUMBER            设置获取配额为 NUMBER 字节。
</span></span><span class="line"><span class="cl">       --bind-address<span class="o">=</span>ADDRESS    绑定至本地主机上的 ADDRESS <span class="o">(</span>主机名或是 IP<span class="o">)</span>。
</span></span><span class="line"><span class="cl">       --limit-rate<span class="o">=</span>RATE         限制下载速率为 RATE。
</span></span><span class="line"><span class="cl">       --no-dns-cache            关闭 DNS 查寻缓存。
</span></span><span class="line"><span class="cl">       --restrict-file-names<span class="o">=</span>OS  限定文件名中的字符为 OS 允许的字符。
</span></span><span class="line"><span class="cl">       --ignore-case             匹配文件/目录时忽略大小写。
</span></span><span class="line"><span class="cl">  -4,  --inet4-only              仅连接至 IPv4 地址。
</span></span><span class="line"><span class="cl">  -6,  --inet6-only              仅连接至 IPv6 地址。
</span></span><span class="line"><span class="cl">       --prefer-family<span class="o">=</span>FAMILY    首先连接至指定协议的地址
</span></span><span class="line"><span class="cl">                                 FAMILY 为 IPv6，IPv4 或是 none。
</span></span><span class="line"><span class="cl">       --user<span class="o">=</span>USER               将 ftp 和 http 的用户名均设置为 USER。
</span></span><span class="line"><span class="cl">       --password<span class="o">=</span>PASS           将 ftp 和 http 的密码均设置为 PASS。
</span></span><span class="line"><span class="cl">       --ask-password            提示输入密码。
</span></span><span class="line"><span class="cl">       --no-iri                  关闭 IRI 支持。
</span></span><span class="line"><span class="cl">       --local-encoding<span class="o">=</span>ENC      IRI <span class="o">(</span>国际化资源标识符<span class="o">)</span> 使用 ENC 作为本地编码。
</span></span><span class="line"><span class="cl">       --remote-encoding<span class="o">=</span>ENC     使用 ENC 作为默认远程编码。
</span></span><span class="line"><span class="cl">       --unlink                  remove file before clobber.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 4.目录：</span>
</span></span><span class="line"><span class="cl">  -nd, --no-directories           不创建目录。
</span></span><span class="line"><span class="cl">  -x,  --force-directories        强制创建目录。
</span></span><span class="line"><span class="cl">  -nH, --no-host-directories      不要创建主目录。
</span></span><span class="line"><span class="cl">       --protocol-directories     在目录中使用协议名称。
</span></span><span class="line"><span class="cl">  -P,  --directory-prefix<span class="o">=</span>PREFIX  以 PREFIX/... 保存文件
</span></span><span class="line"><span class="cl">       --cut-dirs<span class="o">=</span>NUMBER          忽略远程目录中 NUMBER 个目录层。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 5.HTTP 选项：</span>
</span></span><span class="line"><span class="cl">       --http-user<span class="o">=</span>USER        设置 http 用户名为 USER。
</span></span><span class="line"><span class="cl">       --http-password<span class="o">=</span>PASS    设置 http 密码为 PASS。
</span></span><span class="line"><span class="cl">       --no-cache              不在服务器上缓存数据。
</span></span><span class="line"><span class="cl">       --default-page<span class="o">=</span>NAME     改变默认页
</span></span><span class="line"><span class="cl">                               <span class="o">(</span>默认页通常是“index.html”<span class="o">)</span>。
</span></span><span class="line"><span class="cl">  -E,  --adjust-extension      以合适的扩展名保存 HTML/CSS 文档。
</span></span><span class="line"><span class="cl">       --ignore-length         忽略头部的‘Content-Length’区域。
</span></span><span class="line"><span class="cl">       --header<span class="o">=</span>STRING         在头部插入 STRING。
</span></span><span class="line"><span class="cl">       --max-redirect          每页所允许的最大重定向。
</span></span><span class="line"><span class="cl">       --proxy-user<span class="o">=</span>USER       使用 USER 作为代理用户名。
</span></span><span class="line"><span class="cl">       --proxy-password<span class="o">=</span>PASS   使用 PASS 作为代理密码。
</span></span><span class="line"><span class="cl">       --referer<span class="o">=</span>URL           在 HTTP 请求头包含‘Referer: URL’。
</span></span><span class="line"><span class="cl">       --save-headers          将 HTTP 头保存至文件。
</span></span><span class="line"><span class="cl">  -U,  --user-agent<span class="o">=</span>AGENT      标识为 AGENT 而不是 Wget/VERSION。
</span></span><span class="line"><span class="cl">       --no-http-keep-alive    禁用 HTTP keep-alive <span class="o">(</span>永久连接<span class="o">)</span>。
</span></span><span class="line"><span class="cl">       --no-cookies            不使用 cookies。
</span></span><span class="line"><span class="cl">       --load-cookies<span class="o">=</span>FILE     会话开始前从 FILE 中载入 cookies。
</span></span><span class="line"><span class="cl">       --save-cookies<span class="o">=</span>FILE     会话结束后保存 cookies 至 FILE。
</span></span><span class="line"><span class="cl">       --keep-session-cookies  载入并保存会话 <span class="o">(</span>非永久<span class="o">)</span> cookies。
</span></span><span class="line"><span class="cl">       --post-data<span class="o">=</span>STRING      使用 POST 方式；把 STRING 作为数据发送。
</span></span><span class="line"><span class="cl">       --post-file<span class="o">=</span>FILE        使用 POST 方式；发送 FILE 内容。
</span></span><span class="line"><span class="cl">       --content-disposition   当选中本地文件名时
</span></span><span class="line"><span class="cl">                               允许 Content-Disposition 头部 <span class="o">(</span>尚在实验<span class="o">)</span>。
</span></span><span class="line"><span class="cl">       --content-on-error      output the received content on server errors.
</span></span><span class="line"><span class="cl">       --auth-no-challenge     发送不含服务器询问的首次等待
</span></span><span class="line"><span class="cl">                               的基本 HTTP 验证信息。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 6.HTTPS (SSL/TLS) 选项：</span>
</span></span><span class="line"><span class="cl">       --secure-protocol<span class="o">=</span>PR     choose secure protocol, one of auto, SSLv2,
</span></span><span class="line"><span class="cl">                                SSLv3, TLSv1, TLSv1_1 and TLSv1_2.
</span></span><span class="line"><span class="cl">       --no-check-certificate   不要验证服务器的证书。
</span></span><span class="line"><span class="cl">       --certificate<span class="o">=</span>FILE       客户端证书文件。
</span></span><span class="line"><span class="cl">       --certificate-type<span class="o">=</span>TYPE  客户端证书类型，PEM 或 DER。
</span></span><span class="line"><span class="cl">       --private-key<span class="o">=</span>FILE       私钥文件。
</span></span><span class="line"><span class="cl">       --private-key-type<span class="o">=</span>TYPE  私钥文件类型，PEM 或 DER。
</span></span><span class="line"><span class="cl">       --ca-certificate<span class="o">=</span>FILE    带有一组 CA 认证的文件。
</span></span><span class="line"><span class="cl">       --ca-directory<span class="o">=</span>DIR       保存 CA 认证的哈希列表的目录。
</span></span><span class="line"><span class="cl">       --random-file<span class="o">=</span>FILE       带有生成 SSL PRNG 的随机数据的文件。
</span></span><span class="line"><span class="cl">       --egd-file<span class="o">=</span>FILE          用于命名带有随机数据的 EGD 套接字的文件。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 7.FTP 选项：</span>
</span></span><span class="line"><span class="cl">       --ftp-user<span class="o">=</span>USER         设置 ftp 用户名为 USER。
</span></span><span class="line"><span class="cl">       --ftp-password<span class="o">=</span>PASS     设置 ftp 密码为 PASS。
</span></span><span class="line"><span class="cl">       --no-remove-listing     不要删除‘.listing’文件。
</span></span><span class="line"><span class="cl">       --no-glob               不在 FTP 文件名中使用通配符展开。
</span></span><span class="line"><span class="cl">       --no-passive-ftp        禁用“passive”传输模式。
</span></span><span class="line"><span class="cl">       --preserve-permissions  保留远程文件的权限。
</span></span><span class="line"><span class="cl">       --retr-symlinks         递归目录时，获取链接的文件 <span class="o">(</span>而非目录<span class="o">)</span>。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 8.WARC options:</span>
</span></span><span class="line"><span class="cl">       --warc-file<span class="o">=</span>FILENAME      save request/response data to a .warc.gz file.
</span></span><span class="line"><span class="cl">       --warc-header<span class="o">=</span>STRING      insert STRING into the warcinfo record.
</span></span><span class="line"><span class="cl">       --warc-max-size<span class="o">=</span>NUMBER    <span class="nb">set</span> maximum size of WARC files to NUMBER.
</span></span><span class="line"><span class="cl">       --warc-cdx                write CDX index files.
</span></span><span class="line"><span class="cl">       --warc-dedup<span class="o">=</span>FILENAME     <span class="k">do</span> not store records listed in this CDX file.
</span></span><span class="line"><span class="cl">       --no-warc-compression     <span class="k">do</span> not compress WARC files with GZIP.
</span></span><span class="line"><span class="cl">       --no-warc-digests         <span class="k">do</span> not calculate SHA1 digests.
</span></span><span class="line"><span class="cl">       --no-warc-keep-log        <span class="k">do</span> not store the log file in a WARC record.
</span></span><span class="line"><span class="cl">       --warc-tempdir<span class="o">=</span>DIRECTORY  location <span class="k">for</span> temporary files created by the
</span></span><span class="line"><span class="cl">                                 WARC writer.
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 9.递归下载：</span>
</span></span><span class="line"><span class="cl">  -r,  --recursive          指定递归下载。
</span></span><span class="line"><span class="cl">  -l,  --level<span class="o">=</span>NUMBER       最大递归深度 <span class="o">(</span>inf 或 <span class="m">0</span> 代表无限制，即全部下载<span class="o">)</span>。
</span></span><span class="line"><span class="cl">       --delete-after       下载完成后删除本地文件。
</span></span><span class="line"><span class="cl">  -k,  --convert-links      让下载得到的 HTML 或 CSS 中的链接指向本地文件。
</span></span><span class="line"><span class="cl">  --backups<span class="o">=</span>N   before writing file X, rotate up to N backup files.
</span></span><span class="line"><span class="cl">  -K,  --backup-converted   在转换文件 X 前先将它备份为 X.orig。
</span></span><span class="line"><span class="cl">  -m,  --mirror             -N -r -l inf --no-remove-listing 的缩写形式。
</span></span><span class="line"><span class="cl">  -p,  --page-requisites    下载所有用于显示 HTML 页面的图片之类的元素。
</span></span><span class="line"><span class="cl">       --strict-comments    用严格方式 <span class="o">(</span>SGML<span class="o">)</span> 处理 HTML 注释。
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="c1"># 10.递归接受/拒绝：</span>
</span></span><span class="line"><span class="cl">  -A,  --accept<span class="o">=</span>LIST               逗号分隔的可接受的扩展名列表。
</span></span><span class="line"><span class="cl">  -R,  --reject<span class="o">=</span>LIST               逗号分隔的要拒绝的扩展名列表。
</span></span><span class="line"><span class="cl">       --accept-regex<span class="o">=</span>REGEX        regex matching accepted URLs.
</span></span><span class="line"><span class="cl">       --reject-regex<span class="o">=</span>REGEX        regex matching rejected URLs.
</span></span><span class="line"><span class="cl">       --regex-type<span class="o">=</span>TYPE           regex <span class="nb">type</span> <span class="o">(</span>posix<span class="p">|</span>pcre<span class="o">)</span>.
</span></span><span class="line"><span class="cl">  -D,  --domains<span class="o">=</span>LIST              逗号分隔的可接受的域列表。
</span></span><span class="line"><span class="cl">       --exclude-domains<span class="o">=</span>LIST      逗号分隔的要拒绝的域列表。
</span></span><span class="line"><span class="cl">       --follow-ftp                跟踪 HTML 文档中的 FTP 链接。
</span></span><span class="line"><span class="cl">       --follow-tags<span class="o">=</span>LIST          逗号分隔的跟踪的 HTML 标识列表。
</span></span><span class="line"><span class="cl">       --ignore-tags<span class="o">=</span>LIST          逗号分隔的忽略的 HTML 标识列表。
</span></span><span class="line"><span class="cl">  -H,  --span-hosts                递归时转向外部主机。
</span></span><span class="line"><span class="cl">  -L,  --relative                  只跟踪有关系的链接。
</span></span><span class="line"><span class="cl">  -I,  --include-directories<span class="o">=</span>LIST  允许目录的列表。
</span></span><span class="line"><span class="cl">  --trust-server-names             use the name specified by the redirection
</span></span><span class="line"><span class="cl">                                   url last component.
</span></span><span class="line"><span class="cl">  -X,  --exclude-directories<span class="o">=</span>LIST  排除目录的列表。
</span></span><span class="line"><span class="cl">  -np, --no-parent                 不追溯至父目录。
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="2使用wget下载文件">2.使用wget下载文件</h3>
<h4 id="1下载单个文件">1)下载单个文件</h4>
<p>以下的例子是从网络下载一个文件并保存在当前目录</p>
<p>在下载的过程中会显示进度条，包含（下载完成百分比，已经下载的字节，当前下载速度，剩余下载时间）。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget http://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="2以不同的文件名保存--o">2）以不同的文件名保存 -O</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="o">[</span>root@network test<span class="o">]</span><span class="c1"># wget https://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@network test<span class="o">]</span><span class="c1"># ls</span>
</span></span><span class="line"><span class="cl">wordpress-4.9.4-zh_CN.tar.gz
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>我们可以使用参数-O来指定一个文件名：</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">wget -O wordpress.tar.gz  http://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="3断点续传--c">3）断点续传 -c</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 使用wget -c重新启动下载中断的文件:</span>
</span></span><span class="line"><span class="cl">对于我们下载大文件时突然由于网络等原因中断非常有帮助，我们可以继续接着下载而不是重新下载一个文件
</span></span><span class="line"><span class="cl">wget -c https://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="4后台下载--b">4）后台下载 -b</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 对于下载非常大的文件的时候，我们可以使用参数-b进行后台下载</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@network test<span class="o">]</span><span class="c1"># wget -b https://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz</span>
</span></span><span class="line"><span class="cl">继续在后台运行，pid 为 1463。
</span></span><span class="line"><span class="cl">将把输出写入至 “wget-log”。
</span></span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 可以使用以下命令来察看下载进度:</span>
</span></span><span class="line"><span class="cl"><span class="o">[</span>root@network test<span class="o">]</span><span class="c1"># tail -f wget-log</span>
</span></span><span class="line"><span class="cl">  8550K .......... .......... .......... .......... .......... 96%  814K 0s
</span></span><span class="line"><span class="cl">  8600K .......... .......... .......... .......... .......... 97% 9.53M 0s
</span></span><span class="line"><span class="cl">  8650K .......... .......... .......... .......... .......... 98% 86.8M 0s
</span></span><span class="line"><span class="cl">  8700K .......... .......... .......... .......... .......... 98%  145M 0s
</span></span><span class="line"><span class="cl">  8750K .......... .......... .......... .......... .......... 99% 67.4M 0s
</span></span><span class="line"><span class="cl">  8800K .......... .......... .......... .......... .......... 99%  107M 0s
</span></span><span class="line"><span class="cl">  8850K .......... .........                                  100% 1.95M<span class="o">=</span>16s
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2018-11-10 15:39:07 <span class="o">(</span><span class="m">564</span> KB/s<span class="o">)</span> - 已保存 “wordpress-4.9.4-zh_CN.tar.gz.2” <span class="o">[</span>9082696/9082696<span class="o">])</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="5伪装代理名称下载">5）伪装代理名称下载</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">有些网站能通过根据判断代理名称不是浏览器而拒绝你的下载请求。
</span></span><span class="line"><span class="cl">不过你可以通过–user-agent参数伪装。
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="6测试下载链接">6）测试下载链接</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl"><span class="c1"># 进行定时下载，应该在预定时间测试下载链接是否有效。我们可以增加–spider参数进行测试检查:</span>
</span></span><span class="line"><span class="cl">wget --spider URL 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">1.如果下载链接正确，将会显示 
</span></span><span class="line"><span class="cl">wget –spider URL 
</span></span><span class="line"><span class="cl">Spider mode enabled. Check <span class="k">if</span> remote file exists. 
</span></span><span class="line"><span class="cl">HTTP request sent, awaiting response… <span class="m">200</span> OK 
</span></span><span class="line"><span class="cl">Length: unspecified <span class="o">[</span>text/html<span class="o">]</span> 
</span></span><span class="line"><span class="cl">Remote file exists and could contain further links, 
</span></span><span class="line"><span class="cl">but recursion is disabled — not retrieving. 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2.这保证了下载能在预定的时间进行，但当你给错了一个链接，将会显示如下错误 
</span></span><span class="line"><span class="cl">wget –spider url 
</span></span><span class="line"><span class="cl">Spider mode enabled. Check <span class="k">if</span> remote file exists. 
</span></span><span class="line"><span class="cl">HTTP request sent, awaiting response… <span class="m">404</span> Not Found 
</span></span><span class="line"><span class="cl">Remote file does not exist — broken link!!! 
</span></span></code></pre></td></tr></table>
</div>
</div><p>你可以在以下几种情况下使用spider参数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-txt" data-lang="txt"><span class="line"><span class="cl">1. 定时下载之前进行检查
</span></span><span class="line"><span class="cl">2. 间隔检测网站是否可用
</span></span><span class="line"><span class="cl">3. 检查网站页面的死链接
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="7增加重试次数">7）增加重试次数</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">如果网络有问题或下载一个大文件也有可能失败。wget默认重试20次连接下载文件。如果需要，你可以使用–tries增加重试次数。
</span></span><span class="line"><span class="cl">wget –tries<span class="o">=</span><span class="m">40</span> URL
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="8下载多个文件--i">8）下载多个文件 -i</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">1.首先，保存一份下载链接文件 
</span></span><span class="line"><span class="cl">cat &gt; filelist.txt 
</span></span><span class="line"><span class="cl">url1 
</span></span><span class="line"><span class="cl">url2 
</span></span><span class="line"><span class="cl">url3 
</span></span><span class="line"><span class="cl">url4 
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">2.接着使用这个文件和参数-i下载 
</span></span><span class="line"><span class="cl">wget -i filelist.txt
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="9镜像网站-mirror">9）镜像网站 –mirror</h4>
<h4 id="10过滤指定格式下载-reject">10）过滤指定格式下载 –reject</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">下载一个网站，但你不希望下载图片:
</span></span><span class="line"><span class="cl">wget –reject<span class="o">=</span>gif url 
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="11把下载信息存入日志文件--o">11）把下载信息存入日志文件 -o</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">你不希望下载信息直接显示在终端而是在一个日志文件，可以使用以下命令：
</span></span><span class="line"><span class="cl">wget -o download.log URL
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">使用wget -O下载并以不同的文件名保存<span class="o">(</span>-O：下载文件到对应目录，并且修改文件名称<span class="o">)</span>
</span></span><span class="line"><span class="cl">wget -O wordpress.zip http:<span class="sb">``</span>//www<span class="sb">``</span>.minjieren.com<span class="sb">``</span>/download<span class="sb">``</span>.aspx?<span class="sb">``</span>id<span class="sb">``</span><span class="o">=</span><span class="m">1080</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h4 id="12其他参数">12）其他参数</h4>
<ul>
<li>限制总下载文件大小 -Q</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">当你想要下载的文件超过5M而退出下载，你可以使用以下命令：
</span></span><span class="line"><span class="cl">wget -Q5m -i filelist.txt
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">注意：这个参数对单个文件下载不起作用，只能递归下载时才有效。
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>下载指定格式文件 -r -A</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">可以在以下情况使用该功能:
</span></span><span class="line"><span class="cl">1.下载一个网站的所有图片
</span></span><span class="line"><span class="cl">2.下载一个网站的所有视频
</span></span><span class="line"><span class="cl">3.下载一个网站的所有PDF文件
</span></span><span class="line"><span class="cl">wget -r -A.pdf url
</span></span></code></pre></td></tr></table>
</div>
</div><ul>
<li>使用wget FTP下载</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="line"><span class="cl">使用wget来完成ftp链接的下载。 使用wget匿名ftp下载
</span></span><span class="line"><span class="cl">wget ftp-url
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">使用wget用户名和密码认证的ftp下载
</span></span><span class="line"><span class="cl">wget --ftp-user<span class="o">=</span>USERNAME --ftp-password<span class="o">=</span>PASSWORD url
</span></span></code></pre></td></tr></table>
</div>
</div>]]></description>
</item></channel>
</rss>
